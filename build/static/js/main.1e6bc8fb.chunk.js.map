{"version":3,"sources":["utils/chains.js","assets/tellor_white.svg","assets/tellor.svg","contexts/Mode.js","components/frontendBoilerplate/Nav.js","components/frontendBoilerplate/Footer.js","assets/filter_outline.svg","assets/filter.svg","assets/done.svg","utils/psrLookup.js","utils/queryDataParsers.js","utils/helpers.js","components/Table.js","utils/queries.js","contexts/Graph.js","components/LinearIndeterminate.js","components/AllFeeds.js","components/TipTable.js","contexts/GraphAutopay.js","components/ErrorBoundary.js","components/AllTips.js","components/Hero.js","App.js","contexts/User.js","index.js"],"names":["module","exports","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgTellorWhite","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","SvgTellor","ModeContext","createContext","Mode","children","mode","setMode","useState","localStorage","getItem","ModeContextObject","changeMode","setItem","_jsx","Provider","value","Nav","useContext","className","href","alt","rel","Tellor","TellorDark","CustomSwitch","styled","Switch","theme","color","palette","primary","main","createTheme","secondary","label","inputProps","Footer","_jsxs","ThemeProvider","checked","onClick","SvgFilterOutline","SvgFilter","SvgDone","psrLookup","name","granularity","eighteenDecimals","web3","Web3","window","ethereum","queryDataParsers","LegacyRequest","event","queryId","decodedValueName","decodedValue","Intl","NumberFormat","style","currency","format","_value","toString","MimicryNFTMarketIndex","concat","queryDataObj","slice","toUpperCase","valueInWei","parseInt","formattedValue","MimicryMacroMarketMashup","console","log","MimicryCollectionStat","AmpleforthCustomSpotPrice","FileCID","firstThree","substring","lastThree","EVMBalanceCurrent","eth","abi","decodeParameters","_queryData","decodedValues","valueInEther","utils","fromWei","trimmedValue","parseFloat","toFixed","chainName","BTCBalanceCurrent","StringQuery","decodedString","hexToAscii","replace","trim","EVMCall","SpotPrice","asset","Number","SpotPriceProper","options","queryData","minimumFractionDigits","maximumFractionDigits","includes","currencySymbol","formatToParts","find","part","type","test","Default","getDate","require","timestamp","dateArr","Date","split","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","hex2a","hexx","hex","str","String","fromCharCode","substr","truncateAddr","addr","sortDataByProperty","prop","arr","sort","a","b","moment","Table","data","allData","setFiltering","tableData","setTableData","symbolClicked","setSymbolClicked","chainClicked","setChainClicked","reporterClicked","setReporterClicked","dateClicked","setDateClicked","reportedSymbols","setReportedSymbols","reportedChains","setReportedChains","reportedReporters","setReportedReporters","reportedDates","setReportedDates","symbolSearchTerm","setSymbolSearchTerm","reporterSearchTerm","setReporterSearchTerm","startDate","setStartDate","endDate","setEndDate","allFilters","setAllFilters","symbolFilters","setSymbolFilters","chainFilters","setChainFilters","reporterFilters","setReporterFilters","dateFilters","setDateFilters","symbolRef","useRef","chainRef","reporterRef","dateRef","useEffect","prevData","newData","JSON","stringify","decodedData","symbols","chains","reporters","dates","forEach","feedType","push","chain","decodedReporter","decodedTime","handleClick","iconType","current","classList","add","handleClose","remove","handleFilter","filterType","filterValue","temp","allFiltersTemp","allFiltersObj","filter","filters","handleFilterApply","filteredData","symbolMatch","chainMatch","reporterMatch","dateString","parsedDate","eventDateTimestamp","isValid","valueOf","NaN","startTimestamp","getTime","endTimestamp","handleFilterClear","cleared","FilterIconFilled","FilterIcon","placeholder","onChange","e","symbol","toLowerCase","map","_Fragment","Checked","reporter","stopPropagation","date","handleRowClick","txnLink","open","focus","Jazzicon","address","reporterQuery","gql","_templateObject","_taggedTemplateLiteral","autopayQuery","_templateObject2","_templateObject3","divaPayQuery","_templateObject4","divaPayAdaptorQuery","_templateObject5","GraphContext","clientMainnet","ApolloClient","uri","cache","InMemoryCache","clientGoerli","clientSepolia","clientMatic","clientMatic2","clientMumbai","clientMumbai2","clientArbone","clientArbtest","clientGnosismain","clientOptmain","clientOptmain2","Graph","graphMainnetData","setGraphMainnetData","graphGoerliData","setGraphGoerliData","graphSepoliaData","setGraphSepoliaData","graphMaticData","setGraphMaticData","graphMumbaiData","setGraphMumbaiData","graphArboneData","setGraphArboneData","graphArbtestData","setGraphArbtestData","graphGnosismainData","setGraphGnosismainData","graphOptmainData","setGraphOptmainData","allGraphData","setAllGraphData","setDecodedData","mainnet","useQuery","client","fetchPolicy","pollInterval","goerli","sepolia","matic","matic2","mumbai","mumbai2","arbone","arbtest","gnosismain","optmain","optmain2","loading","error","_matic$data","_matic2$data","combinedData","newReportEntities","_mumbai$data","_mumbai2$data","_optmain$data","_optmain2$data","eventsArray","updatedEvent","txnHash","sorted","queryDataPartial","finalQueryData","_nonce","_time","toChecksumAddress","_reporter","_queryId","_queryData3","_queryData4","parse","Type","t1","snapshotProposalId","GraphContextObj","CustomLinearProgress","LinearProgress","LinearIndeterminate","Box","sx","AllFeeds","graphData","clippedData","setClippedData","loadMoreClicks","setLoadMoreClicks","viewing","setViewing","loadMoreButton","setLoadMoreButton","filtering","handleLoadMore","newLoadMoreClicks","newLoadAmount","cursor","display","TipTable","symbolFilter","chainFilter","reporterFilter","makesTheCut","dataProvider","referenceAsset","tips","tip","interval","Math","min","collateralBalanceGross","settlementFee","balance","expiryTime","startTime","GraphAutopayContext","clientOpmain","clientDivaMumbai","clientDivaAdaptorMumbai","GraphAutopay","autopayMaticData","setAutopayMaticData","autopayMainnetData","setAutopayMainnetData","autopayMumbaiData","setAutopayMumbaiData","autopaySepoliaData","setAutopaySepoliaData","autopayOpmainData","setAutopayOpmainData","autopayDivaMumbaiData","setAutopayDivaMumbaiData","autopayDivaAdaptorMumbaiData","setAutopayDivaAdaptorMumbaiData","opmain","divaMumbai","divaAdaptorMumbai","dataFeedEntities","tipAddedEntities","pools","autopayEvents","decoded","_event$_reward$toStri","_event$_amount$toStri","_event$_amount","_event$_balance$toStr","undefined","_interval","_reward","_amount","_balance","multipliedValue","amount","tippingToken","_startTime","_window","floor","collateralToken","_queryData2","proposedFinalReferenceValue","pool","feeRecipients","collateralTokens","feeRecipient","filtered","decodingAutopayMiddleware","ErrorBoundary","Component","constructor","super","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","AllTips","autoPayData","loads","ceil","loadAmount","Hero","marginTop","App","UserContext","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","web3Modal","Web3Modal","cacheProvider","User","currentUser","setCurrentUser","connected","setConnected","setupUserError","setSetupUserError","eventsOn","setEventsOn","setupUser","async","user","provider","connect","chainId","getChainId","getAccounts","network","balances","trbContractEthereum","Contract","minABI","trbContractPolygon","trbContractMumbai","trbContractGoerli","trbContractArbone","chainMainTokenBalance","trbBalance","getBalance","methods","balanceOf","then","res","round","trb","getAssetBalances","err","message","clearCachedProvider","on","accounts","UserContextObject","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1e6bc8fb.chunk.js","sourcesContent":["module.exports = {\n    1: \"mainnet\",\n    3: \"ropsten\",\n    4: \"rinkeby\",\n    5: \"goerli\",\n    42: \"kovan\",\n    137: \"matic\",\n    42161: \"arbone\",\n    80001: \"mumbai\",\n    11155111: \"sepolia\"\n}","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTellorWhite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 193,\n    height: 54,\n    viewBox: \"0 0 193 54\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.78 23.04H23.48V13.87H15.78V3.58H5.42V13.87H0.73V23.04H5.42V44.39C5.42 52.51 10.39 53.98 18.51 53.98C19.98 53.98 21.94 53.84 23.2 53.7V44.88C22.57 44.95 21.73 45.02 20.54 45.02C15.85 45.02 15.78 41.38 15.78 39.28V23.04ZM50.6509 53.98C61.9209 53.98 67.1009 47.12 68.6409 45.02L60.5209 40.33C59.3309 41.66 56.4609 44.81 50.6509 44.81C48.5509 44.81 41.4109 44.11 40.1509 37.81H70.5309C70.5309 37.81 70.7409 35.92 70.7409 32.98C70.3909 20.59 60.5209 13.87 50.6509 13.87C43.4409 13.87 29.7209 18.07 29.7209 33.89C29.7209 49.71 43.1609 53.98 50.6509 53.98ZM50.5809 23.04C55.8309 23.04 59.2609 26.89 59.6809 30.39H40.4309C40.8509 26.47 44.5609 23.04 50.5809 23.04ZM79.2574 53H89.7574V0.0799971H79.2574V53ZM99.8336 53H110.334V0.0799971H99.8336V53ZM139.38 53.91C150.86 53.91 160.38 44.95 160.38 33.82C160.38 22.83 150.86 13.8 139.38 13.8C127.9 13.8 118.52 22.83 118.52 33.82C118.52 44.95 127.9 53.91 139.38 53.91ZM139.38 22.97C145.33 22.97 149.95 27.66 149.95 33.82C149.95 40.05 145.33 44.81 139.38 44.81C133.36 44.81 128.81 40.19 128.81 33.82C128.81 27.73 133.5 22.97 139.38 22.97ZM192.393 24.02V13.8C189.663 13.73 183.153 14.43 179.233 19.61V14.5H168.803V53H179.233V35.99C179.233 24.3 189.873 23.81 192.393 24.02Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTellorWhite);\nexport default __webpack_public_path__ + \"static/media/tellor_white.4a00555c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTellor(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 193,\n    height: 54,\n    viewBox: \"0 0 193 54\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.78 23.04H23.48V13.87H15.78V3.58H5.42V13.87H0.73V23.04H5.42V44.39C5.42 52.51 10.39 53.98 18.51 53.98C19.98 53.98 21.94 53.84 23.2 53.7V44.88C22.57 44.95 21.73 45.02 20.54 45.02C15.85 45.02 15.78 41.38 15.78 39.28V23.04ZM50.6509 53.98C61.9209 53.98 67.1009 47.12 68.6409 45.02L60.5209 40.33C59.3309 41.66 56.4609 44.81 50.6509 44.81C48.5509 44.81 41.4109 44.11 40.1509 37.81H70.5309C70.5309 37.81 70.7409 35.92 70.7409 32.98C70.3909 20.59 60.5209 13.87 50.6509 13.87C43.4409 13.87 29.7209 18.07 29.7209 33.89C29.7209 49.71 43.1609 53.98 50.6509 53.98ZM50.5809 23.04C55.8309 23.04 59.2609 26.89 59.6809 30.39H40.4309C40.8509 26.47 44.5609 23.04 50.5809 23.04ZM79.2574 53H89.7574V0.0799971H79.2574V53ZM99.8336 53H110.334V0.0799971H99.8336V53ZM139.38 53.91C150.86 53.91 160.38 44.95 160.38 33.82C160.38 22.83 150.86 13.8 139.38 13.8C127.9 13.8 118.52 22.83 118.52 33.82C118.52 44.95 127.9 53.91 139.38 53.91ZM139.38 22.97C145.33 22.97 149.95 27.66 149.95 33.82C149.95 40.05 145.33 44.81 139.38 44.81C133.36 44.81 128.81 40.19 128.81 33.82C128.81 27.73 133.5 22.97 139.38 22.97ZM192.393 24.02V13.8C189.663 13.73 183.153 14.43 179.233 19.61V14.5H168.803V53H179.233V35.99C179.233 24.3 189.873 23.81 192.393 24.02Z\",\n    fill: \"#262626\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTellor);\nexport default __webpack_public_path__ + \"static/media/tellor.a85cc955.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, createContext } from 'react'\n\nexport const ModeContext = createContext()\n\nconst Mode = ({ children }) => {\n  //Context State\n  const [mode, setMode] = useState(() => {\n    const saved = localStorage.getItem('mode')\n    return saved || 'dark'\n  })\n\n  const changeMode = () => {\n    if (mode === 'light') {\n      localStorage.setItem('mode', 'dark')\n      setMode('dark')\n    } else if (mode === 'dark') {\n      localStorage.setItem('mode', 'light')\n      setMode('light')\n    }\n  }\n\n  const ModeContextObject = {\n    mode: mode,\n    changeMode: changeMode,\n  }\n\n  return (\n    <ModeContext.Provider value={ModeContextObject}>\n      {children}\n    </ModeContext.Provider>\n  )\n}\n\nexport default Mode\n","import React, { useContext } from 'react'\n//Assets\nimport { ReactComponent as Tellor } from '../../assets/tellor_white.svg'\nimport { ReactComponent as TellorDark } from '../../assets/tellor.svg'\n//Components\n//import WalletConnect from \"./WalletConnect\";\n//Styles\nimport '../../styles/frontendBoilerplate/Nav.css'\n//Contexts\nimport { ModeContext } from '../../contexts/Mode'\n\nfunction Nav() {\n  const mode = useContext(ModeContext)\n  return (\n    <div className=\"Nav\">\n      <a\n        href=\"https://tellor.io/\"\n        alt=\"https://tellor.io/\"\n        rel=\"noopener noreferrer\"\n      >\n        {mode && mode.mode === 'dark' ? (\n          <Tellor className=\"TellorLogo\" />\n        ) : (\n          <TellorDark className=\"TellorLogo\" />\n        )}\n      </a>\n      {/* <WalletConnect /> */}\n    </div>\n  )\n}\n\nexport default Nav\n","import React, { useContext } from 'react'\nimport '../../styles/frontendBoilerplate/Footer.css'\nimport Switch from '@mui/material/Switch'\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles'\nimport { ModeContext } from '../../contexts/Mode'\n\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#20f092',\n      secondary: 'rgba(32, 240, 146, 0.2)',\n    },\n  },\n})\n\nconst label = { inputProps: { 'aria-label': 'Dark/Light Mode Switch' } }\n\nfunction Footer() {\n  //Context State\n  const mode = useContext(ModeContext)\n\n  return (\n    <div className=\"Footer\">\n      <p className=\"FooterText\">&copy; 2023 Tellor, Inc.</p>\n      <div className=\"ModeSwitcher\">\n        <p className=\"ModeSwitcherText\">\n          {mode && mode.mode === 'dark'\n            ? 'Switch to Light Mode'\n            : 'Switch to Dark Mode'}\n        </p>\n        <ThemeProvider theme={theme}>\n          <CustomSwitch\n            {...label}\n            checked={mode && mode.mode === 'dark' ? true : false}\n            onClick={mode.changeMode}\n          />\n        </ThemeProvider>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFilterOutline(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 3H4C3.447 3 3 3.447 3 4V6.59C3 7.113 3.213 7.627 3.583 7.997L9 13.414V21C9 21.347 9.18 21.668 9.475 21.851C9.635 21.95 9.817 22 10 22C10.153 22 10.306 21.965 10.447 21.895L14.447 19.895C14.786 19.725 15 19.379 15 19V13.414L20.417 7.997C20.787 7.627 21 7.113 21 6.59V4C21 3.447 20.553 3 20 3ZM13.293 12.293C13.105 12.48 13 12.734 13 13V18.382L11 19.382V13C11 12.734 10.895 12.48 10.707 12.293L5 6.59V5H19.001L19.003 6.583L13.293 12.293Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilterOutline);\nexport default __webpack_public_path__ + \"static/media/filter_outline.8b97acfd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFilter(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.4472 20.9051C13.786 20.7376 14 20.3951 14 20.0204V14.6999C14 14.4376 14.1054 14.186 14.2929 14.0005L20.414 7.94576C20.789 7.57483 21 7.07135 21 6.54611V3.98915C21 3.44215 20.553 3 20 3H4C3.447 3 3 3.44215 3 3.98915V6.54611C3 7.07135 3.211 7.57483 3.586 7.94576L9.70711 14.0005C9.89464 14.186 10 14.4376 10 14.6999V21.0096C10 21.7449 10.7823 22.2231 11.4472 21.8943L13.4472 20.9051Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilter);\nexport default __webpack_public_path__ + \"static/media/filter.913fff00.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDone(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.00002 16.2001L4.80002 12.0001L3.40002 13.4001L9.00002 19.0001L21 7.0001L19.6 5.6001L9.00002 16.2001Z\",\n    fill: \"#262626\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDone);\nexport default __webpack_public_path__ + \"static/media/done.62fd101c.svg\";\nexport { ForwardRef as ReactComponent };","export const psrLookup = {\n  1: { name: 'ETH/USD', granularity: '1000000' },\n  2: { name: 'BTC/USD', granularity: '1000000' },\n  3: { name: 'BNB/USD', granularity: '1000000' },\n  4: { name: 'BTC/USD', granularity: '1000000' },\n  5: { name: 'ETH/BTC', granularity: '1000000' },\n  6: { name: 'BNB/BTC', granularity: '1000000' },\n  7: { name: 'BNB/ETH', granularity: '1000000' },\n  8: { name: 'ETH/USD', granularity: '1000000' },\n  9: { name: 'ETH/USD', granularity: '1000000' },\n  10: { name: 'AMPL/USD', granularity: '1000000' },\n  11: { name: 'ZEC/ETH', granularity: '1000000' },\n  12: { name: 'TRX/ETH', granularity: '1000000' },\n  13: { name: 'XRP/USD', granularity: '1000000' },\n  14: { name: 'XMR/ETH', granularity: '1000000' },\n  15: { name: 'ATOM/USD', granularity: '1000000' },\n  16: { name: 'LTC/USD', granularity: '1000000' },\n  17: { name: 'WAVES/BTC', granularity: '1000000' },\n  18: { name: 'REP/BTC', granularity: '1000000' },\n  19: { name: 'TUSD/ETH', granularity: '1000000' },\n  20: { name: 'EOS/USD', granularity: '1000000' },\n  21: { name: 'IOTA/USD', granularity: '1000000' },\n  22: { name: 'ETC/USD', granularity: '1000000' },\n  23: { name: 'ETH/PAX', granularity: '1000000' },\n  24: { name: 'ETH/BTC', granularity: '1000000' },\n  25: { name: 'USDC/USDT', granularity: '1000000' },\n  26: { name: 'XTZ/USD', granularity: '1000000' },\n  27: { name: 'LINK/USD', granularity: '1000000' },\n  28: { name: 'ZRX/BNB', granularity: '1000000' },\n  29: { name: 'ZEC/USD', granularity: '1000000' },\n  30: { name: 'XAU/USD', granularity: '1000000' },\n  31: { name: 'MATIC/USD', granularity: '1000000' },\n  32: { name: 'BAT/USD', granularity: '1000000' },\n  33: { name: 'ALGO/USD', granularity: '1000000' },\n  34: { name: 'ZRX/USD', granularity: '1000000' },\n  35: { name: 'COS/USD', granularity: '1000000' },\n  36: { name: 'BCH/USD', granularity: '1000000' },\n  37: { name: 'REP/USD', granularity: '1000000' },\n  38: { name: 'GNO/USD', granularity: '1000000' },\n  39: { name: 'DAI/USD', granularity: '1000000' },\n  40: { name: 'STEEM/BTCUPCE', granularity: '1000000' },\n  41: { name: 'USPCE', granularity: '1000000' },\n  42: { name: 'BTC/USD', granularity: '1000000' },\n  43: { name: 'TRB/ETH', granularity: '1000000' },\n  44: { name: 'BTC/USD', granularity: '1000000' },\n  45: { name: 'TRB/USD', granularity: '1000000' },\n  46: { name: 'ETH/USD', granularity: '1000000' },\n  47: { name: 'BSV/USD', granularity: '1000000' },\n  48: { name: 'MAKER/USD', granularity: '1000000' },\n  49: { name: 'BCH/USD', granularity: '1000000' },\n  50: { name: 'TRB/USD', granularity: '1000000' },\n  51: { name: 'XMR/USD', granularity: '1000000' },\n  52: { name: 'XFT/USD', granularity: '1000000' },\n  53: { name: 'BTCDominance', granularity: '1000000' },\n  54: { name: 'WAVES/USD', granularity: '1000000' },\n  55: { name: 'OGN/USD', granularity: '1000000' },\n  56: { name: 'VIXEOD', granularity: '1000000' },\n  57: { name: 'DEFITVL', granularity: '1000000' },\n  58: { name: 'DEFICAP', granularity: '1000000' },\n  59: { name: 'ETH/JPY', granularity: '1000000' },\n}\n","import { psrLookup } from './psrLookup'\nimport Web3 from 'web3'\n\n\n\nconst eighteenDecimals = 1000000000000000000\n\nconst web3 = new Web3(window.ethereum)\n\nexport const queryDataParsers = {\n  \n  LegacyRequest: (event) => {\n    switch (event.queryId) {\n      case 1:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(event._value / 1000000)\n        return event\n      case 2:\n        event.decodedValueName = psrLookup[event.queryId].name\n        try {event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(event._value / 1000000)\n      } catch {\n        event.decodedValue='disputed'\n      }\n        return event\n      case 3:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue =\n          event._value === '0x'\n            ? '0'\n            : new Intl.NumberFormat('en-EN', {\n                style: 'currency',\n                currency: 'USD',\n              }).format(event._value / 1000000)\n        return event\n      case 10:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue =\n          event._value.toString().length > 17\n            ? new Intl.NumberFormat('en-EN', {\n                style: 'currency',\n                currency: 'USD',\n              }).format(event._value / eighteenDecimals)\n            : new Intl.NumberFormat('en-EN', {\n                style: 'currency',\n                currency: 'USD',\n              }).format(event._value / 1000000)\n        return event\n      case 41:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue =\n          event._value.toString().length > 18\n            ? (event._value / eighteenDecimals).toString()\n            : event._value.toString().length > 6\n            ? '*' + (event._value / 1000000).toString()\n            : '*' + event._value.toString()\n        return event\n      case 50:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(event._value / 1000000)\n        return event\n      case 59:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'JPY',\n        }).format(event._value / 1000000)\n        return event\n      default:\n        event.decodedValueName = 'New Legacy Type'\n        event.decodedValue = '0'\n        return event\n    }\n  },\n  MimicryNFTMarketIndex: (event) => {\n    event.decodedValueName = `MIMICRY NFT INDEX (${event.queryDataObj[0].slice(0,3).toUpperCase()})`\n\n    const valueInWei = parseInt(event._value, 16) / 10 ** 18;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n\n  MimicryMacroMarketMashup: (event) => {\n    console.log(event);\n\n    event.decodedValueName = `MIMICRY NFT MASHUP (${event.queryDataObj[3][0][1].toUpperCase()})`\n    const valueInWei = parseInt(event._value, 16) / 1;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n  MimicryCollectionStat : (event) => {\n    event.decodedValueName = `MimicryCollectionStat ${event.queryDataObj[0].toUpperCase(),event.queryDataObj[1],event.queryDataObj[2]}`\n    \n    const valueInWei = parseInt(event._value, 16) / 10 ** 18;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n  AmpleforthCustomSpotPrice: (event) => {\n    event.decodedValueName = `AMPL/USD`\n\n    const valueInWei = parseInt(event._value, 16) / 10 ** 18;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n  \n  FileCID: (event) => {\n    event.decodedValueName = `FileCID`;\n  \n    // Extracting the first 3 and last 3 characters of event._value\n    const value = event._value;\n    const firstThree = value.substring(0, 4);\n    const lastThree = value.substring(64, 68);\n    event.decodedValue = firstThree + '...' + lastThree + '...';\n    return event;\n  },\n  EVMBalanceCurrent: (event) => {\n    console.log(event);\n    event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0];\n  \n    // Decode the provided string to get the two uint256 values\n    const decodedValues = web3.eth.abi.decodeParameters(['uint256', 'uint256'], event._value);\n  \n    // Convert it from Wei to Ether\n    const valueInEther = web3.utils.fromWei(decodedValues[0], 'ether');\n    \n    // Trim the value to 4 decimal places and convert it back to a number\n    const trimmedValue = parseFloat(valueInEther).toFixed(6);\n    \n // Check if queryDataObj[0] equals '80001' and map it to 'MATIC', otherwise use its original value\n const chainName = event.queryDataObj[0] === '80001' ? ' MATIC' : ' chainId:' + event.queryDataObj[0];\n  \n // Append the mapped chain name to the trimmed value\n event.decodedValue = trimmedValue  + chainName ; // Concatenate the values    return event;\n  },\n  BTCBalanceCurrent: (event) => {\n    event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0];\n  \n    // Decode the provided string to get the two uint256 values\n    const decodedValues = web3.eth.abi.decodeParameters(['uint256', 'uint256'], event._value);\n  \n    // Convert it from Wei to Ether\n    const valueInEther = web3.utils.fromWei(decodedValues[0], 'ether');\n    \n    // Trim the value to 4 decimal places and convert it back to a number\n    const trimmedValue = parseFloat(valueInEther).toFixed(6);\n  \n // Append the mapped chain name to the trimmed value\n event.decodedValue = trimmedValue  + ' BTC' ; // Concatenate the values    return event;\n  },\n  StringQuery: (event) => {\n    console.log(event.queryDataObj)\n    event.decodedValueName = `${event.queryDataObj[0]}`\n  // Decode the hexadecimal string to ASCII\n  const decodedString = web3.utils.hexToAscii(event._value);\n\n  // Remove padding and non-printable characters\n  event.decodedValue = decodedString.replace(/\\u0000/g, '').trim();\n\n  return event;\n  },\n\n\n  /*DivaPool : (event) => {\n    event.decodedValueName = `DivaPool`;\n    event.decodedValue = `${event.queryDataObj[0]}`;\n    return event;\n  },*/\n  \n  EVMCall : (event) => {\n    event.decodedValueName = `EVMCall`;\n\n    // Directly assign the raw data to decodedValue\n    event.decodedValue = 'Chain id:' + event.queryDataObj[0] || \"No Data Available\";\n\n    return event;\n  },\n\n  \n  SpotPrice: (event) => {\n    console.log(event)\n    switch (event.queryId) {\n\n      case 5:\n        event.decodedValueName = `${event.queryDataObj.asset}/${event.queryDataObj.currency}`\n        event.decodedValue = parseInt(Number(event._value), 10)\n        if (event.decodedValue % 1 === 0 || event.decodedValue.toFixed(2).slice(-2) === '00') {\n          event.decodedValue = parseInt(event.decodedValue, 10);\n        }\n  \n        return event\n      default:\n        event.decodedValueName = 'New SpotPrice Type'\n        event.decodedValue = '0'\n        return event\n    }\n  },\n  SpotPriceProper: (event) => {\n    switch (event.queryDataObj[0]) {\n      case 'ohm':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = `${\n          parseInt(Number(event._value), 10) / eighteenDecimals\n        }`\n        return event\n      case 'dai':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = `$${(\n          parseInt(Number(event._value), 10) / eighteenDecimals\n        ).toString()}`\n        return event\n      case 'ric':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'bct':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'mkr':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(event._value) / eighteenDecimals)\n        return event\n      case 'usdc':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'vsq':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'idle':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'sushi':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      /*case 'pepe':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n          const value = parseInt(Number(event._value), 10) / eighteenDecimals\n          const options = {\n            style: 'currency',\n            currency: 'USD',\n          }\n            options.minimumFractionDigits = 6\n            options.maximumFractionDigits = 6\n            event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value)\n        return event*/\n      case 'matic':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'eur':\n          event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n          event.decodedValue = new Intl.NumberFormat('en-EN', {\n            style: 'currency',\n            currency: 'USD',\n          }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n          return event\n      case 'steth':\n        if (event.queryDataObj[1] === 'btc') {\n          event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n          const value = parseInt(Number(event._value), 10) / eighteenDecimals\n          const options = {\n            style: 'currency',\n            currency: 'BTC',\n          }\n            options.minimumFractionDigits = 6\n            options.maximumFractionDigits = 6\n            event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value)\n\n          }\n      if (event.queryDataObj[1] === 'usd') {\n          let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1])\n          event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`\n          event.decodedValue = new Intl.NumberFormat('en-EN', {\n            style: 'currency',\n            currency: queryData[1].toUpperCase(),\n          }).format(Number(event._value) / eighteenDecimals)\n      }\n            return event\n            case 'oeth':\n              if (event.queryDataObj[1] === 'eth') {\n                event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n                const value = parseInt(Number(event._value), 10) / eighteenDecimals\n                const options = {\n                  style: 'decimal',\n                  minimumFractionDigits: 6,\n                  maximumFractionDigits: 6\n                }\n                event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value) + ' ETH'\n              }\n              if (event.queryDataObj[1] === 'usd') {\n                let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1])\n                event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`\n                event.decodedValue = new Intl.NumberFormat('en-EN', {\n                  style: 'currency',\n                  currency: queryData[1].toUpperCase(),\n                }).format(Number(event._value) / eighteenDecimals)\n              }\n              return event\n      case 'wsteth':\n        if (event.queryDataObj[1] === 'eth') {\n            event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n            const value = parseInt(Number(event._value), 10) / eighteenDecimals\n            const options = {\n              style: 'currency',\n              currency: 'ETH',\n            }\n              options.minimumFractionDigits = 6\n              options.maximumFractionDigits = 6\n              event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value)\n\n            }\n        if (event.queryDataObj[1] === 'usd') {\n            let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1])\n            event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`\n            event.decodedValue = new Intl.NumberFormat('en-EN', {\n              style: 'currency',\n              currency: queryData[1].toUpperCase(),\n            }).format(Number(event._value) / eighteenDecimals)\n        }\n        return event\n\n          \n        default:\n          let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1]);\n          event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`;\n          let value = Number(event._value) / eighteenDecimals;\n        \n          // Format the number with 7 decimals if it includes '.00', otherwise use Intl.NumberFormat with currency style\n          if (value.toFixed(2).includes('.00')) {\n            let currencySymbol = new Intl.NumberFormat('en-EN', {\n              style: 'currency',\n              currency: queryData[1].toUpperCase(),\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0,\n            }).formatToParts(0).find(part => part.type === 'currency').value;\n        \n            event.decodedValue = value.toFixed(18);\n            if (/\\.0+$/.test(event.decodedValue)) {\n              event.decodedValue = event.decodedValue.replace(/\\.0+$/, '');\n            }\n            event.decodedValue = currencySymbol  + event.decodedValue;\n          } else {\n            event.decodedValue = new Intl.NumberFormat('en-EN', {\n              style: 'currency',\n              currency: queryData[1].toUpperCase(),\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            }).format(value);\n          }\n        \n          return event;\n        \n  }\n  },\n  // Snapshot: (event) => {\n  //   switch (event) {\n  //     case '1':\n  //       event.decodedValueName = `SPID: ${event.snapshotProposalId}`\n  //       event.decodedValue = `[${event.tempValues[0]}, ${event.tempValues[1]}]`\n  //       return event\n  //     default:\n  //       event.decodedValueName = 'New Snapshot Type'\n  //       event.decodedValue = '0'\n  //       return event\n  //   }\n  // },*/\n  Default: (event) => {\n    switch (event._value.length) {\n      case 66:\n        event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0]\n        event.decodedValue =  parseInt(event._value)/eighteenDecimals\n        return event\n      default:\n        event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0]\n        event.decodedValue = '0'\n        return event\n    }\n  },\n}","import minABI from './minimumABI.json'\nimport Web3 from 'web3'\nimport { queryDataParsers } from './queryDataParsers'\n//Globals\nconst web3 = new Web3(window.ethereum)\n\nconst BN = require('bn.js');\n\nconst tellorAddressMainnet = '0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0'\nconst tellorAddressPolygon = '0xE3322702BEdaaEd36CdDAb233360B939775ae5f1'\nconst tellorAddressMumbai = '0xce4e32fe9d894f8185271aa990d2db425df3e6be'\nconst tellorAddressGoerli = '0xB3B662644F8d3138df63D2F43068ea621e2981f9'\nconst tellorAddressArbone = '0xd58D345Fd9c82262E087d2D0607624B410D88242'\n\nconst getDate = (timestamp) => {\n  const months = {\n    Jan: '01',\n    Feb: '02',\n    Mar: '03',\n    Apr: '04',\n    May: '05',\n    Jun: '06',\n    Jul: '07',\n    Aug: '08',\n    Sep: '09',\n    Oct: '10',\n    Nov: '11',\n    Dec: '12',\n  }\n  const date = new Date(timestamp * 1000).toString()\n  const dateArr = date.split(' ')\n  const finalDate = `${dateArr[2]}/${months[dateArr[1]]}/${dateArr[3]}, ${\n    dateArr[4]\n  }`\n  return finalDate\n}\n\nconst hex2a = (hexx) => {\n  let hex = hexx.toString() //force conversion\n  let str = ''\n  for (let i = 0; i < hex.length; i += 2)\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n\n  return str.substring(1)\n}\n\nexport const truncateAddr = (addr) => {\n  return addr.slice(0, 6) + '...' + addr.slice(-4)\n}\n\nexport const getAssetBalances = async (web3, address, chainId) => {\n  //Instantiating Contracts\n  const trbContractEthereum = new web3.eth.Contract(\n    minABI,\n    tellorAddressMainnet\n  )\n  const trbContractPolygon = new web3.eth.Contract(minABI, tellorAddressPolygon)\n  const trbContractMumbai = new web3.eth.Contract(minABI, tellorAddressMumbai)\n  const trbContractGoerli = new web3.eth.Contract(minABI, tellorAddressGoerli)\n  const trbContractArbone = new web3.eth.Contract(minABI, tellorAddressArbone)\n  //Function Globals\n  let chainMainTokenBalance\n  let trbBalance\n\n  switch (chainId) {\n    case 1:\n      //Main Chain Balance - ETHEREUM MAINNET\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractEthereum.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 4:\n      //Main Chain Balance - RINKEBY\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractEthereum.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 5:\n      //Main Chain Balance - GOERLI\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractGoerli.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n      case 42161:\n        //Main Chain Balance - ARBITRUM ONE\n        chainMainTokenBalance = web3.utils.fromWei(\n          await web3.eth.getBalance(address)\n        )\n        trbBalance = await trbContractArbone.methods\n          .balanceOf(address)\n          .call()\n          .then((res) => web3.utils.fromWei(res))\n        //Add more assets here if needed\n        return {\n          main: Math.round(chainMainTokenBalance * 100) / 100,\n          trb: Math.round(trbBalance * 100) / 100,\n        }\n        case 137:\n      //Main Chain Balance - MATIC/POLYGON MAINNET\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractPolygon.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 80001:\n      //Main Chain Balance - MUMBAI\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractMumbai.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    default:\n      return null\n  }\n}\n\nexport const sortDataByProperty = (prop, arr) => {\n  arr.sort(function (a, b) {\n    if (a[prop] < b[prop]) {\n      return 1\n    } else if (a[prop] > b[prop]) {\n      return -1\n    } else {\n      return 0\n    }\n  })\n  return arr\n}\n\nexport const decodingAutopayMiddleware = (autopayEvents) => {\n  try {\n\n  //console.log(autopayEvents)\n  let decoded = autopayEvents.map((event) => {\n    let queryDataPartial\n    let queryData\n    let finalQueryData\n    if (event.divaPayQuery || event.divaPayAdaptorQuery) {\n      if (event.referenceAsset !== undefined) {\n        event.decodedValue = event.referenceAsset;\n      } else {\n        event.decodedValue = '0';\n        console.error(\"referenceAsset is missing for event:\", event);\n      }\n    }\n  \n    event.interval = event._interval ? `${(event._interval / 60 / 60)} hour(s)  ` : 'One-Time Tip'\n    //console.log(event._interval)\n    event.tip = event._reward ? web3.utils.fromWei(event._reward.toString() ?? '0') + ' TRB' : web3.utils.fromWei(event._amount?.toString()  ?? '0').slice(0,6) + ' TRB' \n    event.tips = event.tip\n    event.balance = event._balance ? web3.utils.fromWei(event._balance.toString() ?? '0').slice(0,7) + ' TRB' : '-'\n    event.multipliedValue = event.amount ? (Number(event.amount).toFixed(7))+ (event.settlementFee * event.collateralBalanceGross) +  event.tippingToken: '0';    //console.log(event.event.tippingToken);\n    event.startTime = getDate(event._startTime)\n    event.window = event._window\n    event.symbols = event._queryData\n    event.symbol = ''\n    event.floor = event.floor\n    event.expiryTime = getDate(event.expiryTime)\n    if (event.collateralToken){\n      event.symbol = event.collateralToken.symbol\n    }\n  \n    if (event._queryData && event._queryData.length <= 104) {\n      try {queryData = JSON.parse(hex2a(event._queryData))\n      event.queryDataObj = queryData\n      queryDataParsers[queryData?.type || queryData?.Type || 'Default'](event)\n      } catch {\n        event.queryDataObj='0x'\n      }\n    } \n    if (event._queryData && event._queryData.length > 104) {\n      queryDataPartial = web3.eth.abi.decodeParameters(\n        ['string', 'bytes'],\n        event._queryData\n        \n      )\n      switch (queryDataPartial[0]) {\n        \n        case 'LegacyRequest':\n          event.decodedValue = parseInt(Number(queryDataPartial[1]), 10)\n          queryDataParsers[queryDataPartial[0] || 'Default'](event)\n          break\n        case 'SpotPrice':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n          break\n\n        case 'MimicryNFTMarketIndex':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `MIMICRY_NFTINDX ${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n          break\n        case 'MimicryMacroMarketMashup':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string', 'tuple(string, address)[]','(string, string, address)[]'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `MIMICRY_NFTMASH (${finalQueryData[3][0][1].toUpperCase()})`\n          break\n        case 'MimicryCollectionStat':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `Mimicry NFT STAT ${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n          break\n        case 'DivaPool':\n            finalQueryData = queryDataPartial[1].data.pools[0]\n            event.queryDataObj = finalQueryData\n            event.decodedValue = finalQueryData.proposedFinalReferenceValue\n            event.pool = {\n              id: finalQueryData.pool.id.toUpperCase()\n            }\n            break\n        case 'DivaFeeRecipients':\n          finalQueryData = queryDataPartial[1].data.feeRecipients[0]\n          event.queryDataObj = finalQueryData\n          event.decodedValue = finalQueryData.collateralTokens\n          event.feeRecipient = {\n            id: finalQueryData.feeRecipient.id.toUpperCase()\n          }\n          break\n        case 'EVMCall':\n              try {\n                // Log the raw data to console for inspection\n                //console.log(\"Raw EVMCall data:\", queryDataPartial[1]);\n\n                // Attempt to decode the transaction\n                finalQueryData = web3.eth.abi.decodeParameters(['uint'], queryDataPartial[1]);\n                event.decodedValue = `EVMCall ${finalQueryData[0]}`;\n              } catch (error) {\n                //console.error(\"Error decoding EVMCall data:\", error, \"Raw data:\", queryDataPartial[1]);\n                // Optionally, set a flag or a specific value to indicate a decoding error\n                event.decodedValue = \"Decoding Error\";\n                // Continue to the next transaction without throwing the error\n                return event;\n  }\n  return event;\n        /*case 'GasPriceOracle':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.queryDataObj = finalQueryData\n          queryDataParsers['SpotPriceProper' || 'Default'](event)\n          break*/\n        case 'CurrencyExchangeRate':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['string', 'string'],\n              queryDataPartial[1]\n            )\n            event.decodedValue = `${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n            break\n        //These will not be shown: https://github.com/tellor-io/dataSpecs/blob/main/types/NumericApiResponse.md\n        default:\n          event.decodedValue = 'NumericApiResponse'\n          return event\n      }\n    }\n    return event\n  })\n\n\n\n\n  let filtered = [];\n  decoded.map((event) => {\n    if(event.decodedValue === 'NumericApiResponse'){\n      return;\n    } else {\n      filtered.push(event);\n    }\n  })\n  //console.log('filtered', filtered);\n  return filtered;\n} catch (error) {\n  console.error(\"Error decoding data:\", error);\n  // Handle the error appropriately\n  // You might want to return an empty array or a default value depending on your application's needs\n  return [];\n}\n}\n\n\nexport const getCollateralTokenSymbol = (token) => {\n  return token.collateralToken.symbol;\n}\n\nexport const decodingMiddleware = (reportEvents) => {\n  let decoded = reportEvents.map((event) => {\n    let queryData\n    let queryDataPartial\n    let finalQueryData\n    let temp\n    event.id = event.id + event._nonce + event.chain.split(' ')[0]\n    event.decodedTime = getDate(event._time)\n    event.decodedReporter = web3.utils.toChecksumAddress(event._reporter)\n    event.queryId = parseInt(Number(event._queryId), 10)\n\n    try {\n      // The following line is where the overflow error might occur\n      queryDataPartial = web3.eth.abi.decodeParameters(\n        ['string', 'bytes'],\n        event._queryData\n      );\n    \n    if (event._queryData && event._queryData.length <= 104) {\n      try {queryData = JSON.parse(hex2a(event._queryData))\n      event.queryDataObj = queryData\n      queryDataParsers[queryData?.type || queryData?.Type || 'Default'](event)\n      } catch {\n        event.queryDataObj='0x'\n      }\n    } else if (event._queryData && event._queryData.length > 104) {\n      queryDataPartial = web3.eth.abi.decodeParameters(\n        ['string', 'bytes'],\n        event._queryData\n      )\n      switch (queryDataPartial[0]) {\n        case 'LegacyRequest':\n          event.queryId = parseInt(Number(queryDataPartial[1]), 10)\n          queryDataParsers[queryDataPartial[0] || 'Default'](event)\n          break\n        case 'AmpleforthCustomSpotPrice':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.queryDataObj = finalQueryData\n          queryDataParsers['AmpleforthCustomSpotPrice' || 'Default'](event)\n          break\n        case 'StringQuery':\n          console.log(\"Complete event data:\", event);\n\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string'],\n            queryDataPartial[1]\n          )\n        \n          // Assign the decoded string to queryDataObj\n          event.queryDataObj = finalQueryData\n          queryDataParsers['StringQuery' || 'Default'](event)\n          break\n        case 'FileCID':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['string'],\n              queryDataPartial[1]\n            )\n            event.queryDataObj = finalQueryData\n            queryDataParsers['FileCID' || 'Default'](event)\n          break\n        case 'SpotPrice':\n\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.queryDataObj = finalQueryData\n          queryDataParsers['SpotPriceProper' || 'Default'](event)\n          break\n        case 'EVMBalanceCurrent':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['uint256', 'address'],\n            queryDataPartial[1]\n          )\n          console.log(finalQueryData)\n          event.queryDataObj = finalQueryData\n          queryDataParsers['EVMBalanceCurrent' || 'Default'](event)\n          break\n          case 'BTCBalanceCurrent':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['uint256', 'address'],\n              queryDataPartial[1]\n            )\n            //console.log(finalQueryData)\n            event.queryDataObj = finalQueryData\n            queryDataParsers['BTCBalanceCurrent' || 'Default'](event)\n            break\n        case 'DivaPay':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `DivaPay ${finalQueryData[0]}`\n          break\n      case 'MimicryNFTMarketIndex':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string'],\n          queryDataPartial[1]\n        )\n        event.queryDataObj = finalQueryData\n        queryDataParsers['MimicryNFTMarketIndex' || 'Default'](event)\n          break\n      case 'MimicryMacroMarketMashup':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string', 'tuple(string, address)[]','tuple(string, string, address)[]'],\n             queryDataPartial[1]\n          )\n        event.queryDataObj = finalQueryData\n        queryDataParsers['MimicryMacroMarketMashup' || 'Default'](event)\n              break\n      case 'EVMCall':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['uint256', 'address', 'bytes'],\n             queryDataPartial[1]\n          )\n          //console.log(\"EVMCall decoded data:\", finalQueryData); // This line logs the decoded data\n\n        event.queryDataObj = finalQueryData\n        queryDataParsers['EVMCall' || 'Default'](event)\n              break\n      /*case 'DivaPool':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string', 'tuple(string, address)[]','tuple(string, string, address)[]'],\n            queryDataPartial[1]\n          )\n        event.queryDataObj = finalQueryData\n        queryDataParsers['DivaPool' || 'Default'](event)\n              break*/\n      /*case 'GasPriceOracle':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string'],\n          queryDataPartial[1]\n        )\n        event.decodedValue = `${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n            break*/ \n        case 'CurrencyExchangeRate':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['string', 'string'],\n              queryDataPartial[1]\n            )\n            event.queryDataObj = finalQueryData\n            queryDataParsers['EUR/USD' || 'Default'](event)\n            break\n        case 'TellorRNG':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['uint'],\n            queryDataPartial[1]\n          )\n          temp = web3.eth.abi.decodeParameters(\n            ['uint256'],\n            event._value\n          )\n          event.feedType = 'TellorRNG'\n          event.decodedValueName = `TellorRNG`\n          let t1  = `[${temp[0]}]`\n          event.decodedValue = t1.slice(1,7) + \"...\"\n          return event\n        case 'Snapshot':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string'],\n            queryDataPartial[1]\n          )\n          event.snapshotProposalId = parseInt(finalQueryData[0])\n          temp = web3.eth.abi.decodeParameters(\n            ['bool'],\n            event._value\n          )\n          event.feedType = 'Snapshot'\n          event.decodedValueName = `Snap: ${event.snapshotProposalId}`\n          event.decodedValue = `[${temp[0]}]`\n          return event\n        // queryDataParsers['Snapshot' || 'Default'](event)\n        // break\n        default:\n          queryDataParsers['Default'](event)\n          return event\n      }\n    }\n\n  } catch (error) {\n    console.error(\"Error decoding data for event:\", event, error);\n    // Handle the error, e.g., by setting a default error message or value\n    event.decodedValue = \"Decoding Error\";\n    // Optionally, you can add more error-specific handling here\n  }\n  return event;\n});\n\n// Filter out or keep events with decoding errors based on your needs\n// For example, to exclude them:\n// let filteredDecoded = decoded.filter(event => event.decodedValue !== \"Decoding Error\");\n\nreturn decoded; // Or return filteredDecoded if you filtered the list\n}\n ","import React, { useEffect, useRef, useState, useContext } from 'react'\nimport '../styles/Table.css'\nimport { ReactComponent as FilterIcon } from '../assets/filter_outline.svg'\nimport { ReactComponent as FilterIconFilled } from '../assets/filter.svg'\nimport { ReactComponent as Checked } from '../assets/done.svg'\n//Icons\nimport { Jazzicon } from '@ukstv/jazzicon-react'\n//Utils\nimport { truncateAddr } from '../utils/helpers'\n//Contexts\nimport { ModeContext } from '../contexts/Mode'\nconst moment = require('moment');\n\nfunction Table({ data, allData, setFiltering }) {\n  //Component State\n  const [tableData, setTableData] = useState([])\n  //\n  const [symbolClicked, setSymbolClicked] = useState(false)\n  const [chainClicked, setChainClicked] = useState(false)\n  const [reporterClicked, setReporterClicked] = useState(false)\n  const [dateClicked, setDateClicked] = useState(false)\n  //\n  const [reportedSymbols, setReportedSymbols] = useState(null)\n  const [reportedChains, setReportedChains] = useState(null)\n  const [reportedReporters, setReportedReporters] = useState(null)\n  const [reportedDates, setReportedDates] = useState(null)\n  const [symbolSearchTerm, setSymbolSearchTerm] = useState(\"\");\n  const [reporterSearchTerm, setReporterSearchTerm] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  //\n  const [allFilters, setAllFilters] = useState([])\n  const [symbolFilters, setSymbolFilters] = useState([])\n  const [chainFilters, setChainFilters] = useState([])\n  const [reporterFilters, setReporterFilters] = useState([])\n  const [dateFilters, setDateFilters] = useState([])\n  //Refs\n  const symbolRef = useRef()\n  const chainRef = useRef()\n  const reporterRef = useRef()\n  const dateRef = useRef()\n  //Contexts\n  const mode = useContext(ModeContext)\n\n  //useEffect for tableData\n  useEffect(() => {\n    if (!data) return;\n    setTableData(prevData => {\n      const newData = data.slice(prevData.length);\n      if (JSON.stringify(newData) !== JSON.stringify([])) {\n        return [...prevData, ...newData]\n        \n      }\n      return prevData;\n    })\n  }, [data])\n\n  //useEffect for populating\n  //table dropdown data\n  useEffect(() => {\n    if (!allData && !allData.decodedData) return\n    let symbols = []\n    let chains = []\n    let reporters = []\n    let dates = []\n    allData.decodedData.forEach((event) => {\n      if (!symbols.includes(event.decodedValueName) && event.decodedValueName) {\n        if (event.feedType === 'Snapshot' && !symbols.includes('Snapshot')) {\n          symbols.push('Snapshot')\n        } else if (!event.feedType) {\n          symbols.push(event.decodedValueName)\n        }\n      }\n      if (!chains.includes(event.chain)) {\n        chains.push(event.chain)\n      }\n      if (!reporters.includes(event.decodedReporter) && event.decodedReporter) {\n        reporters.push(event.decodedReporter)\n      }\n      if (!dates.includes(event.decodedTime.split(',')[0].trim()) && event.decodedTime) {\n        dates.push(event.decodedTime.split(',')[0].trim())\n      }\n    })\n    setReportedSymbols(symbols)\n    setReportedChains(chains)\n    setReportedReporters(reporters)\n    setReportedDates(dates)\n\n    return () => {\n      setReportedSymbols(null)\n      setReportedChains(null)\n      setReportedReporters(null)\n      setReportedDates(null)\n    }\n  }, [allData])\n\n  //Handlers\n  const handleClick = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(true)\n        symbolRef.current.classList.add('display')\n        break\n      case 'chain':\n        setChainClicked(true)\n        chainRef.current.classList.add('display')\n        break\n      case 'reporter':\n        setReporterClicked(true)\n        reporterRef.current.classList.add('display')\n        break\n      case 'date':\n        setDateClicked(true)\n        dateRef.current.classList.add('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleClose = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(false)\n        symbolRef.current.classList.remove('display')\n        break\n      case 'chain':\n        setChainClicked(false)\n        chainRef.current.classList.remove('display')\n        break\n      case 'reporter':\n        setReporterClicked(false)\n        reporterRef.current.classList.remove('display')\n        break\n      case 'date':\n        setDateClicked(false)\n        dateRef.current.classList.remove('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleFilter = (filterType, filterValue) => {\n    let temp\n    let allFiltersTemp\n    let allFiltersObj = { filterType: filterType, filterValue: filterValue }\n\n    switch (filterType) {\n      case 'symbol':\n        if (symbolFilters.includes(filterValue)) {\n          temp = symbolFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setSymbolFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setSymbolFilters([...symbolFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'chain':\n        if (chainFilters.includes(filterValue)) {\n          temp = chainFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setChainFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setChainFilters([...chainFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'reporter':\n        if (reporterFilters.includes(filterValue)) {\n          temp = reporterFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setReporterFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setReporterFilters([...reporterFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'date':\n        if (dateFilters.includes(filterValue)) {\n          temp = dateFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setDateFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setDateFilters([...dateFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      default:\n        return\n    }\n  }\n  const handleFilterApply = () => {\n    let filteredData = allData.decodedData.filter(event => {\n      const symbolMatch = symbolFilters.length === 0 || symbolFilters.includes(event.decodedValueName);\n      const chainMatch = chainFilters.length === 0 || chainFilters.includes(event.chain);\n      const reporterMatch = reporterFilters.length === 0 || reporterFilters.includes(event.decodedReporter);\n      \n      // Convert startDate and endDate to timestamps for comparison\n      const dateString = event.decodedTime;\n      const parsedDate = moment(dateString, 'DD/MM/YYYY, HH:mm:ss');\n      let eventDateTimestamp;\n      if (parsedDate.isValid()) {\n          eventDateTimestamp = parsedDate.valueOf(); // Get the timestamp\n      } else {\n          console.log('Failed to parse date:', dateString);\n          eventDateTimestamp = NaN; // Keep the NaN behavior for consistency\n      }\n\n      const startTimestamp = startDate ? new Date(startDate).getTime() : null;\n      const endTimestamp = endDate ? new Date(endDate).getTime() : null;\n\n      // Check if event date is within the selected range\n      const dateMatch = (!startTimestamp || eventDateTimestamp >= startTimestamp) && (!endTimestamp || eventDateTimestamp <= endTimestamp);\n\n      return symbolMatch && chainMatch && reporterMatch && dateMatch;\n    });\n\n    setTableData(filteredData.slice(0, 6)); // Limit to first 6 items\n    setFiltering(filteredData.length > 0);\n  };\n\n  // Effect hook to re-apply filters when any filter changes or the initial dataset updates\n  useEffect(() => {\n    if (startDate && endDate) {\n      handleFilterApply();\n    }\n  }, [symbolFilters, chainFilters, reporterFilters, dateFilters, allData, startDate, endDate]);\n\n  const handleFilterClear = (filterType) => {\n    let cleared\n    switch (filterType) {\n      case 'symbol':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        setSymbolFilters([])\n        break\n      case 'chain':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply()\n        setChainFilters([])\n        break\n      case 'reporter':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply()\n        setReporterFilters([])\n        break\n        case 'date':\n          cleared = allFilters.filter(\n            (filters) => filters.filterType !== filterType\n          )\n          setAllFilters(cleared)\n          setStartDate(\"\"); // Clear the start date\n          setEndDate(\"\"); // Clear the end date\n          handleFilterApply()\n          setDateFilters([])\n          break\n        default:\n          return\n    }\n  }\n  const handleRowClick = (txnLink) => {\n    window.open(txnLink, '_blank').focus()\n  }\n\n  return (\n    <table className=\"Table\">\n      <thead className=\"TableHeaders\">\n        <tr className=\"TH__Header\">\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>SYMBOLS</h1>\n              {symbolClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('symbol')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('symbol')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={symbolRef}\n            >\n              <h3>filter by symbol</h3>\n              <input\n  type=\"text\"\n  placeholder=\"Search...\"\n  value={symbolSearchTerm}\n  onChange={(e) => setSymbolSearchTerm(e.target.value)}\n/>\n              <div className=\"DropdownResults\">\n                {reportedSymbols &&\n                  reportedSymbols.filter((symbol) => symbol.toLowerCase().includes(symbolSearchTerm.toLowerCase()))\n                  .map((symbol) => (\n                    <div\n                      key={symbol}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('symbol', symbol)}\n                    >\n                      {symbolFilters.includes(symbol) ? (\n                        <>\n                          <p>{symbol}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{symbol}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('symbol')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th>\n            <h1>VALUE</h1>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>CHAIN</h1>\n              {chainClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('chain')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('chain')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={chainRef}\n            >\n              <h3>filter by chain</h3>\n              <div className=\"DropdownResults\">\n                {reportedChains &&\n                  reportedChains.map((chain) => (\n                    <div\n                      key={chain}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('chain', chain)}\n                    >\n                      {chainFilters.includes(chain) ? (\n                        <>\n                          <p>{chain}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{chain}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('chain')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>REPORTER</h1>\n              {reporterClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('reporter')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('reporter')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={reporterRef}\n            >\n              <h3>filter by reporter</h3>\n              <input\n  type=\"text\"\n  placeholder=\"Search...\"\n  value={reporterSearchTerm}\n  onChange={(e) => setReporterSearchTerm(e.target.value)}\n/>\n              <div className=\"DropdownResults\">\n                {reportedReporters &&\n  reportedReporters\n  .filter((reporter) => reporter.toLowerCase().includes(reporterSearchTerm.toLowerCase()))\n    .map((reporter) => (\n                    <div\n                      key={reporter}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('reporter', reporter)}\n                    >\n                      {reporterFilters.includes(reporter) ? (\n                        <>\n                          <p>{truncateAddr(reporter)}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{truncateAddr(reporter)}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('reporter')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>DATE(DD/MM/YY), TIME</h1>\n              {dateClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('date')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('date')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={dateRef}\n            >\n              <h3>filter by date</h3>\n              <input\n                 type=\"date\"\n                 placeholder=\"Start Date...\"\n                 value={startDate}\n                 onChange={(e) => {\n                   e.stopPropagation();\n                   setStartDate(e.target.value);\n                 }}\n               />\n              <input\n                 type=\"date\"\n                 placeholder=\"End Date...\"\n                 value={endDate}\n                 onChange={(e) => {\n                   e.stopPropagation();\n                   setEndDate(e.target.value);\n                 }}\n               />\n              <div className=\"DropdownResults\">\n                {reportedDates &&\n                  reportedDates.filter((date) => date.toLowerCase().includes(startDate.toLowerCase()) || date.toLowerCase().includes(endDate.toLowerCase()))\n                  .map((date) => (\n                    <div\n                      key={date}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('date', date)}\n                    >\n                      {dateFilters.includes(date) ? (\n                        <>\n                          <p>{date}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{date}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('date')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableData && tableData.length > 0 ? (\n          tableData.map((event) => (\n            <tr\n              key={event.id}\n              className={mode.mode === 'dark' ? 'TableBody' : 'TableBodyDark'}\n              onClick={() => handleRowClick(event.txnLink)}\n            >\n              <td className=\"TB__Symbols\">{event.decodedValueName}</td>\n              <td className=\"TB__Value\">{event.decodedValue}</td>\n              <td className=\"TB__Chain\">{event.chain}</td>\n              <td className=\"TB__Reporter\">\n                <Jazzicon\n                  address={event.decodedReporter}\n                  className=\"Table__Jazzicon\"\n                />\n                <p>{truncateAddr(event.decodedReporter)}</p>\n              </td>\n              <td className=\"TB__DateTime\">{event.decodedTime}</td>\n            </tr>\n          ))\n        ) : (\n          <tr className=\"TableBodyNoMatches\">\n            <td>Data Doesn't Match Entries</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table","import { gql } from '@apollo/client'\n\nexport const reporterQuery = gql`\n  query {\n    newReportEntities(orderBy: _time, orderDirection: desc) {\n      id\n      _nonce\n      _queryData\n      _queryId\n      _time\n      _value\n      _reporter\n      txnHash\n    }\n  }\n`\n\nexport const reporterWRewardQuery = gql`\n  query {\n    newReportEntities(orderBy: _time, orderDirection: desc) {\n      id\n      _nonce\n      _queryData\n      _queryId\n      _reward\n      _time\n      _value\n      _reporter\n      txnHash\n    }\n  }\n`\n\nexport const autopayQuery = gql`\n  query {\n    dataFeedFundedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _feedId\n      _amount\n      _feedFunder\n    }\n    newDataFeedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _feedId\n      _queryData\n      _feedCreator\n    }\n    oneTimeTipClaimedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _amount\n      _reporter\n    }\n    tipAddedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _amount\n      _queryData\n      _tipper\n      _startTime\n      txnHash\n    }\n    tipClaimedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _feedId\n      _queryId\n      _amount\n      _reporter\n    }\n    dataFeedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _reward\n      _startTime\n      _interval\n      _window\n      _priceThreshold\n      _queryData\n      _balance\n      txnHash\n    }\n    \n  }\n`\n\nexport const divaPayQuery = gql`\n  query {\n    pools(orderBy: id, orderDirection: desc) {\n      id\n      referenceAsset\n      dataProvider\n      settlementFee\n      expiryTime\n      collateralBalanceGross\n      collateralToken {\n        id\n        name\n        symbol\n        decimals\n      }\n    }\n\n    feeRecipients(orderBy: id, orderDirection: desc) {\n    id\n    collateralTokens {\n      amount\n      collateralToken {\n        id\n        name\n        symbol\n        decimals\n      }\n    }\n    }\n  }\n`\n\n\nexport const divaPayAdaptorQuery = gql`\n    query {\n      tipAddeds(orderBy: id, orderDirection: desc) {\n        id\n        poolId\n        tippingToken\n        amount\n        tipper\n        blockNumber\n        blockTimestamp\n        transactionHash\n    }\n  }\n`\n","import React, { useState, createContext, useEffect } from 'react'\n//The Graph\nimport { ApolloClient, InMemoryCache, useQuery } from '@apollo/client'\n//Utils\nimport { reporterQuery, autopayQuery } from '../utils/queries'\nimport { decodingMiddleware, sortDataByProperty } from '../utils/helpers'\n\nexport const GraphContext = createContext()\n\n//ApolloClients\nconst clientMainnet = new ApolloClient({\n  uri: 'https://gateway-arbitrum.network.thegraph.com/api/ad08435a6d6c0933c9e272dbdfa21322/subgraphs/id/5vJKyvzkSDv6kc5vCbyohvXq1KgCczsSVr58jUaPih6S',\n  cache: new InMemoryCache(),\n})\n/*const clientMainnet2 = new ApolloClient({\n  uri: 'https://api.studio.thegraph.com/query/33329/tellororaclemainhgraph/version/latest',\n  cache: new InMemoryCache(),\n})*/ \nconst clientGoerli = new ApolloClient({\n  uri: 'https://api.goldsky.com/api/public/project_clf8nopuy59a93stya1d02ev6/subgraphs/tellor-oracle-goerli/v0.0.1/gn',\n  //'https://api.goldsky.com/api/public/project_clf8nopuy59a93stya1d02ev6/subgraphs/tellor-oracle-goerli/v0.0.1/gn',\n  cache: new InMemoryCache(), \n})\nconst clientSepolia = new ApolloClient({\n  uri: 'https://gateway-arbitrum.network.thegraph.com/api/ad08435a6d6c0933c9e272dbdfa21322/subgraphs/id/EVBJPDb3Cv5CQiWQetL9voCs95YP5tgozPyxuXq4iZhN',\n  cache: new InMemoryCache(),\n})\n/*const clientSepolia2 = new ApolloClient({\n  uri: 'https://api.studio.thegraph.com/query/33329/tellor-flex-sepolia-subgraph2/v0.0.2',\n  cache: new InMemoryCache(),\n})*/\nconst clientMatic = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellorflexoraclematichgraph',\n  cache: new InMemoryCache(),\n})\nconst clientMatic2 = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/raynharr/tellor-flex-matic-graph2',\n  cache: new InMemoryCache(),\n})\nconst clientMumbai = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellorflexoraclemumbaihgraph',\n  cache: new InMemoryCache(),\n})\nconst clientMumbai2 = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/raynharr/tellor-360-mumbai-subgraph',\n  cache: new InMemoryCache(),\n})\nconst clientArbone = new ApolloClient({\n  uri: //'https://api.zondax.ch/fil/data/v1/mainnet/transactions/address/f1bkgyshmwpji4sltshvtyzf6yb7uraxr2pkwlamq?page=1',\n  'https://api.thegraph.com/subgraphs/name/raynharr/tellor-flex-arbitrummain-graph',\n  cache: new InMemoryCache(),\n})\nconst clientArbtest = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellor-oracle-arbitrum-goerli',\n  //'https://api.goldsky.com/api/public/project_clf8nopuy59a93stya1d02ev6/subgraphs/tellor-oracle-arbitrumtest/v0.0.1/gn',\n  cache: new InMemoryCache(),\n})\nconst clientGnosismain = new ApolloClient({\n  uri: 'https://gateway.thegraph.com/api/ad08435a6d6c0933c9e272dbdfa21322/subgraphs/id/A614VZr6wqD4B8wNwiZTqrV6StP1Kvmp2AgG2EdJF31k',\n  cache: new InMemoryCache(),\n})\nconst clientOptmain = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellor-oracle-optimism-main',\n  cache: new InMemoryCache(),\n})\nconst clientOptmain2 = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/raynharr/tellor-flex-optmain-graph2',\n  cache: new InMemoryCache(),\n})\n\nconst Graph = ({ children }) => {\n  //Component State\n  const [graphMainnetData, setGraphMainnetData] = useState({})\n  const [graphGoerliData, setGraphGoerliData] = useState({})\n  const [graphSepoliaData, setGraphSepoliaData] = useState({})\n  const [graphMaticData, setGraphMaticData] = useState({})\n  const [graphMumbaiData, setGraphMumbaiData] = useState({})\n  const [graphArboneData, setGraphArboneData] = useState({})\n  const [graphArbtestData, setGraphArbtestData] = useState({})\n  const [graphGnosismainData, setGraphGnosismainData] = useState({})\n  const [graphOptmainData, setGraphOptmainData] = useState({})\n  const [allGraphData, setAllGraphData] = useState(null)\n  const [decodedData, setDecodedData] = useState(null)\n\n  //Graph Querying every 5 seconds\n  //Mainnet\n  const mainnet = useQuery(reporterQuery, {\n    client: clientMainnet,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  /*const mainnet2 = useQuery(reporterQuery, {\n    client: clientMainnet2,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  }))*/\n  const mainPay = useQuery(autopayQuery, {\n    client: clientMainnet,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n   //Goerli\n   const goerli = useQuery(reporterQuery, {\n    client: clientGoerli,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  const goerliPay = useQuery(autopayQuery, {\n    client: clientGoerli,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Sepolia\n  const sepolia = useQuery(reporterQuery, {\n    client: clientSepolia,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  /*const sepolia2 = useQuery(reporterQuery, {\n    client: clientSepolia2,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })*/\n  //Matic\n  const matic = useQuery(reporterQuery, {\n    client: clientMatic,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Matic\n  const matic2 = useQuery(reporterQuery, {\n    client: clientMatic2,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Mumbai\n  const mumbai = useQuery(reporterQuery, {\n    client: clientMumbai,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  const mumbai2 = useQuery(reporterQuery, {\n    client: clientMumbai2,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n\n  //Arbitrum One (Main)\n  const arbone = useQuery(reporterQuery, {\n    client: clientArbone,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n    //Arbitrum Test (Goerli)\n  const arbtest = useQuery(reporterQuery, {\n    client: clientArbtest,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Gnosis Mainnet\n  const gnosismain = useQuery(reporterQuery, {\n    client: clientGnosismain,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //optimism(mainnet)\n  const optmain = useQuery(reporterQuery, {\n    client: clientOptmain,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n   //optimism(mainnet)\n   const optmain2 = useQuery(reporterQuery, {\n    client: clientOptmain2,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n\n  //useEffects for listening to reponses\n  //from ApolloClient queries\n  //Mainnet\n  useEffect(() => {\n    if (!mainnet) return\n    setGraphMainnetData({\n      data: mainnet.data,\n      loading: mainnet.loading,\n      error: mainnet.error,\n    })\n\n    return () => {\n      setGraphMainnetData({})\n    }\n  }, [mainnet.data, mainnet.loading, mainnet.error]) //eslint-disable-line\n\n    //Goerli\n    useEffect(() => {\n      if (!goerli) return\n      setGraphGoerliData({\n        data: goerli.data,\n        loading: goerli.loading,\n        error: goerli.error,\n      })\n  \n      return () => {\n        setGraphGoerliData({})\n      }\n    }, [goerli.data, goerli.loading, goerli.error]) //eslint-disable-line\n    //Sepolia\n    useEffect(() => {\n      if (!sepolia) return\n      setGraphSepoliaData({\n        data: sepolia.data,\n        loading: sepolia.loading,\n        error: sepolia.error,\n      })\n  \n      return () => {\n        setGraphSepoliaData({})\n      }\n    }, [sepolia.data, sepolia.loading, sepolia.error]) //eslint-disable-line\n  //Matic\n  useEffect(() => {\n    if (!matic && !matic2.data) return\n    const combinedData = {\n      ...matic.data,\n      ...matic2.data,\n      newReportEntities: [\n        ...(matic.data?.newReportEntities || []),\n        ...(matic2.data?.newReportEntities || [])\n      ]\n    }\n    setGraphMaticData({\n      data: combinedData,\n      loading: matic.loading || matic2.loading,\n      error: matic.error || matic2.error,\n    })\n\n    return () => {\n      setGraphMaticData({})\n    }\n  }, [matic.data, matic.loading, matic.error, matic2.data, matic2.loading, matic2.error]) //eslint-disable-line\n  //Mumbai\n  useEffect(() => {\n    if (!mumbai.data && !mumbai2.data) return\n    const combinedData = {\n      ...mumbai.data,\n      ...mumbai2.data,\n      newReportEntities: [\n        ...(mumbai.data?.newReportEntities || []),\n        ...(mumbai2.data?.newReportEntities || [])\n      ]\n    }\n    setGraphMumbaiData({\n      data: combinedData,\n      loading: mumbai.loading || mumbai2.loading,\n      error: mumbai.error || mumbai2.error,\n    })\n  \n    return () => {\n      setGraphMumbaiData({})\n    }\n  }, [mumbai.data, mumbai.loading, mumbai.error, mumbai2.data, mumbai2.loading, mumbai2.error]) //eslint-disable-line\n   //Arbitrum One\n   useEffect(() => {\n    if (!arbone) return\n    setGraphArboneData({\n      data: arbone.data,\n      loading: arbone.loading,\n      error: arbone.error,\n    })\n\n    return () => {\n      setGraphArboneData({})\n    }\n  }, [arbone.data, arbone.loading, arbone.error]) //eslint-disable-line  \n     //Arbitrum Test\n     useEffect(() => {\n      if (!arbtest) return\n      setGraphArbtestData({\n        data: arbtest.data,\n        loading: arbtest.loading,\n        error: arbtest.error,\n      })\n  \n      return () => {\n        setGraphArbtestData({})\n      }\n    }, [arbtest.data, arbtest.loading, arbtest.error]) //eslint-disable-line  \n  //Gnosis Main\n  useEffect(() => {\n    if (!gnosismain) return\n    setGraphGnosismainData({\n      data: gnosismain.data,\n      loading: gnosismain.loading,\n      error: gnosismain.error,\n    })\n\n    return () => {\n      setGraphGnosismainData({})\n    }\n  }, [gnosismain.data, gnosismain.loading, gnosismain.error]) //eslint-disable-line \n   //Optmain\n  useEffect(() => {\n    if (!optmain.data && !optmain2.data) return\n    const combinedData = {\n      ...optmain.data,\n      ...optmain2.data,\n      newReportEntities: [\n        ...(optmain.data?.newReportEntities || []),\n        ...(optmain2.data?.newReportEntities || [])\n      ]\n    }\n    setGraphOptmainData({\n      data: combinedData,\n      loading: optmain.loading || optmain2.loading,\n      error: optmain.error || optmain2.error,\n    })\n  \n    return () => {\n      setGraphOptmainData({})\n    }\n  }, [optmain.data, optmain.loading, optmain.error, optmain2.data, optmain2.loading, optmain2.error]) //eslint-disable-line\n\n  //For conglomerating data\n  useEffect(() => {\n    if (\n      !graphMainnetData.data ||\n      !graphGoerliData.data ||\n      !graphSepoliaData.data ||\n      !graphMaticData.data ||\n      !graphMumbaiData.data ||\n      !graphArboneData.data ||\n      !graphArbtestData.data ||\n      !graphGnosismainData.data ||\n      !graphOptmainData.data\n    )\n      return\n\n    let eventsArray = []\n  if (graphMainnetData.data && graphMainnetData.data.newReportEntities) {\n  graphMainnetData.data.newReportEntities.forEach((event) => {\n    const updatedEvent = Object.assign({}, event, { chain: 'Ethereum Mainnet' });\n    updatedEvent.txnLink = `https://etherscan.io/tx/${event.txnHash}`;\n    eventsArray.push(updatedEvent);\n  });\n}\n\ngraphGoerliData.data.newReportEntities.forEach((event) => {\n  const updatedEvent = Object.assign({}, event, { chain: 'Goerli Testnet' });\n  updatedEvent.txnLink = `https://goerli.etherscan.io/tx/${event.txnHash}`;\n  eventsArray.push(updatedEvent);\n});\n\nif (graphSepoliaData.data && graphSepoliaData.data.newReportEntities) {\n  graphSepoliaData.data.newReportEntities.forEach((event) => {\n   const updatedEvent = Object.assign({}, event, { chain: 'Sepolia Testnet' });\n    updatedEvent.txnLink = `https://sepolia.etherscan.io/tx/${event.txnHash}`;\n    eventsArray.push(updatedEvent);\n  });\n}\n\nif (graphMaticData.data && graphMaticData.data.newReportEntities) {\ngraphMaticData.data.newReportEntities.forEach((event) => {\n  const updatedEvent = Object.assign({}, event, { chain: 'Polygon Mainnet' });\n  updatedEvent.txnLink = `https://polygonscan.com/tx/${event.txnHash}`;\n  eventsArray.push(updatedEvent);\n});\n}\n\nif (graphMumbaiData.data && graphMumbaiData.data.newReportEntities) {\n  graphMumbaiData.data.newReportEntities.forEach((event) => {\n    const updatedEvent = Object.assign({}, event, { chain: 'Mumbai Testnet' });\n    updatedEvent.txnLink = `https://mumbai.polygonscan.com/tx/${event.txnHash}`;\n    eventsArray.push(updatedEvent);\n  });\n}\n\ngraphArboneData.data.newReportEntities.forEach((event) => {\n  const updatedEvent = Object.assign({}, event, { chain: 'Arbitrum Mainnet' });\n  updatedEvent.txnLink = `https://arbiscan.io/tx/${event.txnHash}`;\n  eventsArray.push(updatedEvent);\n});\n\ngraphArbtestData.data.newReportEntities.forEach((event) => {\n  const updatedEvent = Object.assign({}, event, { chain: 'Arbitrum Goerli' });\n  updatedEvent.txnLink = `https://goerli.arbiscan.io/tx/${event.txnHash}`;\n  eventsArray.push(updatedEvent);\n});\n\ngraphGnosismainData.data.newReportEntities.forEach((event) => {\nconst updatedEvent = Object.assign({}, event, { chain: 'Gnosis Mainnet' });\nupdatedEvent.txnLink = `https://gnosisscan.io/tx/${event.txnHash}`;\neventsArray.push(updatedEvent);\n});\n\nif (graphOptmainData.data && graphOptmainData.data.newReportEntities) {\ngraphOptmainData.data.newReportEntities.forEach((event) => {\nconst updatedEvent = Object.assign({}, event, { chain: 'Optimism Mainnet' });\nupdatedEvent.txnLink = `https://optimistic.etherscan.io/tx/${event.txnHash}`;\neventsArray.push(updatedEvent);\n});\n}\n    let sorted = sortDataByProperty('_time', eventsArray)\n    setAllGraphData(sorted)\n\n    return () => {\n      setAllGraphData(null)\n    }\n  }, [graphMainnetData, graphGoerliData, graphSepoliaData, graphMaticData, graphMumbaiData, graphArboneData, graphArbtestData, graphGnosismainData, graphOptmainData])\n\n  useEffect(() => {\n    if (!allGraphData) return\n    setDecodedData(decodingMiddleware(allGraphData))\n\n    return () => {\n      setDecodedData(null)\n    }\n  }, [allGraphData])\n\n  const GraphContextObj = {\n    decodedData: decodedData,\n  }\n\n  return (\n    <GraphContext.Provider value={GraphContextObj}>\n      {children}\n    </GraphContext.Provider>\n  )\n}\n\nexport default Graph","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles'\n\nconst CustomLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#20f092',\n      secondary: 'rgba(32, 240, 146, 0.2)',\n    },\n  },\n})\n\nexport default function LinearIndeterminate() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ width: '50%' }}>\n        <CustomLinearProgress />\n      </Box>\n    </ThemeProvider>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport '../styles/AllFeeds.css'\nimport Table from './Table'\n//Context\nimport { GraphContext } from '../contexts/Graph'\nimport { ModeContext } from '../contexts/Mode'\n//Components\nimport LinearIndeterminate from './LinearIndeterminate'\n\nfunction AllFeeds() {\n  //Context State\n  const graphData = useContext(GraphContext)\n  const mode = useContext(ModeContext)\n  //Component State\n  const [clippedData, setClippedData] = useState([])\n  const [loadMoreClicks, setLoadMoreClicks] = useState(1)\n  const [viewing, setViewing] = useState(null)\n  const [loadMoreButton, setLoadMoreButton] = useState(true)\n  const [filtering, setFiltering] = useState(false)\n\n  useEffect(() => {\n    if (!graphData.decodedData) return\n    const newData = graphData.decodedData.slice(0, 50);\n    setClippedData(prevData => {\n      if (JSON.stringify(newData) !== JSON.stringify(prevData)) {\n        return [...prevData, ...newData]\n      }\n      return prevData;\n    })\n  }, [graphData.decodedData])\n\n  useEffect(() => {\n    if (!clippedData) return\n    setViewing(clippedData.slice(0, 6))\n\n    return () => {\n      setViewing(null)\n    }\n  }, [clippedData]) //eslint-disable-line\n\n  const handleLoadMore = () => {\n    if (!loadMoreButton) return; // If the button is disabled, do nothing\n\n    const newLoadMoreClicks = loadMoreClicks + 1;\n    setLoadMoreClicks(newLoadMoreClicks); // Increment the number of times the button has been clicked\n\n    const totalItems = clippedData.length; // Total items available\n    const itemsPerLoad = 6; // Number of items to load per click, adjust as needed\n    const newLoadAmount = itemsPerLoad * newLoadMoreClicks; // Calculate new amount of items to display\n\n    if (newLoadAmount >= totalItems) {\n      // If the new load amount is greater than or equal to total items, show all items and disable the button\n      setViewing(clippedData);\n      setLoadMoreButton(false); // Disable the \"load more\" button as all items are now displayed\n    } else {\n      // If not all items are displayed, update the viewing state with the new slice of data\n      setViewing(clippedData.slice(0, newLoadAmount));\n    }\n  }\n\n  //console.log({ loadMoreButton, filtering, clippedDataLength: clippedData.length, viewingLength: viewing?.length });\n\n  return (\n    <>\n      {graphData && graphData.decodedData ? (\n        <div className=\"AllFeedsView\">\n          <Table\n            data={viewing}\n            allData={graphData}\n            setFiltering={setFiltering}\n          />\n          <button\n  className={mode.mode === 'dark' ? 'AllFeeds__Button' : 'AllFeeds__ButtonDark'}\n  onClick={handleLoadMore}\n  style={{\n    cursor: loadMoreButton ? 'pointer' : 'not-allowed',\n    display: 'flex', // Temporarily ignore the filtering condition\n  }}\n>\n  load more\n</button>\n        </div>\n      ) : (\n        <div className=\"Loading\">\n          <LinearIndeterminate />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default AllFeeds","import React, { useEffect, useRef, useState, useContext } from 'react'\nimport '../styles/Table.css'\nimport { ReactComponent as FilterIcon } from '../assets/filter_outline.svg'\nimport { ReactComponent as FilterIconFilled } from '../assets/filter.svg'\nimport { ReactComponent as Checked } from '../assets/done.svg'\nimport LinearIndeterminate from './LinearIndeterminate'\n//Contexts\nimport { decodeSymbols } from '../utils/helpers'\nimport { ModeContext } from '../contexts/Mode'\nimport { eventWrapper } from '@testing-library/user-event/dist/utils'\n\nfunction TipTable({ data, allData, setFiltering }) {\n  //Component State\n  const [tableData, setTableData] = useState([])\n  //\n  const [symbolClicked, setSymbolClicked] = useState(false)\n  const [chainClicked, setChainClicked] = useState(false)\n  const [reporterClicked, setReporterClicked] = useState(false)\n  //\n  const [reportedSymbols, setReportedSymbols] = useState(null)\n  const [reportedChains, setReportedChains] = useState(null)\n  const [reportedReporters, setReportedReporters] = useState(null)\n\n  //\n  const [allFilters, setAllFilters] = useState([])\n  const [symbolFilters, setSymbolFilters] = useState([])\n  const [chainFilters, setChainFilters] = useState([])\n  const [reporterFilters, setReporterFilters] = useState([])\n  //Refs\n  const symbolRef = useRef()\n  const chainRef = useRef()\n  const reporterRef = useRef()\n  //Contexts\n  const mode = useContext(ModeContext)\n\n  useEffect(() => {\n    if (!data) return;\n    setTableData(prevData => {\n      const newData = data.slice(prevData.length);\n      if (JSON.stringify(newData) !== JSON.stringify([])) {\n        return [...prevData, ...newData]\n      }\n      return prevData;\n    })\n  }, [data])\n  \n  useEffect(() => {\n    if (!allData && !allData.decodedData) return\n    let symbols = []\n    let chains = []\n    let reporters = []\n    allData.decodedData.forEach((event) => {\n      if (!symbols.includes(event.decodedValue) && event.decodedValue) {\n        if (event.feedType === 'Snapshot' && !symbols.includes('Snapshot')) {\n          symbols.push('Snapshot')\n        } else if (!event.feedType) {\n          symbols.push(event.decodedValue)\n        }\n      }\n      if (!chains.includes(event.chain)) {\n        chains.push(event.chain)\n      }\n      if (!reporters.includes(event.decodedReporter) && event.decodedReporter) {\n        reporters.push(event.decodedReporter)\n      }\n    })\n    setReportedSymbols(symbols)\n    setReportedChains(chains)\n    setReportedReporters(reporters)\n\n    return () => {\n      setReportedSymbols(null)\n      setReportedChains(null)\n      setReportedReporters(null)\n    }\n  }, [allData])\n\n  //Handlers\n  const handleClick = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(true)\n        symbolRef.current.classList.add('display')\n        break\n      case 'chain':\n        setChainClicked(true)\n        chainRef.current.classList.add('display')\n        break\n      case 'reporter':\n        setReporterClicked(true)\n        reporterRef.current.classList.add('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleClose = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(false)\n        symbolRef.current.classList.remove('display')\n        break\n      case 'chain':\n        setChainClicked(false)\n        chainRef.current.classList.remove('display')\n        break\n      case 'reporter':\n        setReporterClicked(false)\n        reporterRef.current.classList.remove('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleFilter = (filterType, filterValue) => {\n    let temp\n    let allFiltersTemp\n    let allFiltersObj = { filterType: filterType, filterValue: filterValue }\n\n    switch (filterType) {\n      case 'symbol':\n        if (symbolFilters.includes(filterValue)) {\n          temp = symbolFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setSymbolFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setSymbolFilters([...symbolFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'chain':\n        if (chainFilters.includes(filterValue)) {\n          temp = chainFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setChainFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setChainFilters([...chainFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'reporter':\n        if (reporterFilters.includes(filterValue)) {\n          temp = reporterFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setReporterFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setReporterFilters([...reporterFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      default:\n        return\n    }\n  }\n  const handleFilterApply = (filterType, cleared) => {\n    let filteredData = []\n    let symbolFilter = false\n    let symbols = []\n    let chainFilter = false\n    let chains = []\n    let reporterFilter = false\n    let reporters = []\n    //\n    let makesTheCut = []\n\n    if (cleared) {\n      if (cleared.length > 0) {\n        allData.decodedData.forEach((event) => {\n          cleared.forEach((filter) => {\n            if (filter.filterType === 'symbol') {\n              symbolFilter = true\n              if (!symbols.includes(filter.filterValue)) {\n                symbols.push(filter.filterValue)\n              }\n            } else if (filter.filterType === 'chain') {\n              chainFilter = true\n              if (!chains.includes(filter.filterValue)) {\n                chains.push(filter.filterValue)\n              }\n            } else if (filter.filterType === 'reporter') {\n              reporterFilter = true\n              if (!reporters.includes(filter.filterValue)) {\n                reporters.push(filter.filterValue)\n              }\n            }\n\n            switch (true) {\n              //For all 3 filterTypes\n              case symbolFilter && chainFilter && reporterFilter:\n                symbols.forEach((symbol) => {\n                  chains.forEach((chain) => {\n                    reporters.forEach((reporter) => {\n                      if (\n                        (filter.filterValue === event.decodedValue ||\n                          filter.filterValue === event.feedType) &&\n                        event.chain === chain &&\n                        event.decodedReporter === reporter\n                      ) {\n                        if (makesTheCut.includes(event)) {\n                        } else {\n                          makesTheCut.push(event)\n                        }\n                      }\n                    })\n                  })\n                })\n                break\n              //For 2 filterTypes\n              case symbolFilter && chainFilter:\n                symbols.forEach((symbol) => {\n                  chains.forEach((chain) => {\n                    if (\n                      (filter.filterValue === event.decodedValue ||\n                        filter.filterValue === event.feedType) &&\n                      event.chain === chain\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              case symbolFilter && reporterFilter:\n                symbols.forEach((symbol) => {\n                  reporters.forEach((reporter) => {\n                    if (\n                      (filter.filterValue === event.decodedValue ||\n                        filter.filterValue === event.feedType) &&\n                      event.decodedReporter === reporter\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              case chainFilter && reporterFilter:\n                chains.forEach((chain) => {\n                  reporters.forEach((reporter) => {\n                    if (\n                      event.chain === chain &&\n                      event.decodedReporter === reporter\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              //For single category filterTypes\n              case symbolFilter:\n                if (\n                  filter.filterValue === event.decodedValue ||\n                  filter.filterValue === event.feedType\n                ) {\n                  filteredData.push(event)\n                }\n                break\n              case chainFilter:\n                if (filter.filterValue === event.chain) {\n                  filteredData.push(event)\n                }\n                break\n              case reporterFilter:\n                if (filter.filterValue === event.decodedReporter) {\n                  filteredData.push(event)\n                }\n                break\n              default:\n                return\n            }\n          })\n        })\n        if (makesTheCut.length > 0) {\n          setTableData(makesTheCut)\n        } else {\n          setTableData(filteredData)\n        }\n        setFiltering(true)\n      } else {\n        setTableData(data)\n        setFiltering(false)\n      }\n    } else {\n      if (allFilters.length > 0) {\n        allData.decodedData.forEach((event) => {\n          allFilters.forEach((filter) => {\n            if (filter.filterType === 'symbol') {\n              symbolFilter = true\n              if (!symbols.includes(filter.filterValue)) {\n                symbols.push(filter.filterValue)\n              }\n            } else if (filter.filterType === 'chain') {\n              chainFilter = true\n              if (!chains.includes(filter.filterValue)) {\n                chains.push(filter.filterValue)\n              }\n            } else if (filter.filterType === 'reporter') {\n              reporterFilter = true\n              if (!reporters.includes(filter.filterValue)) {\n                reporters.push(filter.filterValue)\n              }\n            }\n\n            switch (true) {\n              //For all 3 filterTypes\n              case symbolFilter && chainFilter && reporterFilter:\n                symbols.forEach((symbol) => {\n                  chains.forEach((chain) => {\n                    reporters.forEach((reporter) => {\n                      if (\n                        (event.decodedValue === symbol ||\n                          event.feedType === symbol) &&\n                        event.chain === chain &&\n                        event.decodedReporter === reporter\n                      ) {\n                        if (makesTheCut.includes(event)) {\n                        } else {\n                          makesTheCut.push(event)\n                        }\n                      }\n                    })\n                  })\n                })\n                break\n              //For 2 filterTypes\n              case symbolFilter && chainFilter:\n                symbols.forEach((symbol) => {\n                  chains.forEach((chain) => {\n                    if (\n                      (event.decodedValue === symbol ||\n                        event.feedType === symbol) &&\n                      event.chain === chain\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              case symbolFilter && reporterFilter:\n                symbols.forEach((symbol) => {\n                  reporters.forEach((reporter) => {\n                    if (\n                      (event.decodedValue  === symbol ||\n                        event.feedType === symbol) &&\n                      event.decodedReporter === reporter\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              case chainFilter && reporterFilter:\n                chains.forEach((chain) => {\n                  reporters.forEach((reporter) => {\n                    if (\n                      event.chain === chain &&\n                      event.decodedReporter === reporter\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              //For single category filterTypes\n              case symbolFilter:\n                if (\n                  filter.filterValue === event.decodedValue ||\n                  filter.filterValue === event.feedType\n                ) {\n                  filteredData.push(event)\n                }\n                break\n              case chainFilter:\n                if (filter.filterValue === event.chain) {\n                  filteredData.push(event)\n                }\n                break\n              case reporterFilter:\n                if (filter.filterValue === event.decodedReporter) {\n                  filteredData.push(event)\n                }\n                break\n              default:\n                return\n            }\n          })\n        })\n        if (makesTheCut.length > 0) {\n          setTableData(makesTheCut)\n        } else {\n          setTableData(filteredData)\n        }\n        setFiltering(true)\n      } else {\n        setTableData(data)\n        setFiltering(false)\n      }\n    }\n\n    switch (filterType) {\n      case 'symbol':\n        handleClose('symbol')\n        break\n      case 'chain':\n        handleClose('chain')\n        break\n      case 'reporter':\n        handleClose('reporter')\n        break\n      default:\n        return\n    }\n  }\n  const handleFilterClear = (filterType) => {\n    let cleared\n    switch (filterType) {\n      case 'symbol':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply('symbol', cleared)\n        setSymbolFilters([])\n        break\n      case 'chain':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply('chain', cleared)\n        setChainFilters([])\n        break\n      case 'reporter':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply('reporter', cleared)\n        setReporterFilters([])\n        break\n      default:\n        return\n    }\n  }\n\n  const handleRowClick = (txnLink) => {\n    window.open(txnLink, '_blank').focus()\n  }\n\n  \n\n  return (\n    <table className=\"Table\">\n      <thead className=\"TableHeaders\">\n        <tr className=\"TH__Header\">\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>SYMBOLS</h1>\n              {symbolClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('symbol')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('symbol')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={symbolRef}\n            >\n              <h3>filter by symbol</h3>\n              <div className=\"DropdownResults\">\n                {reportedSymbols &&\n                  reportedSymbols.map((symbol) => (\n                    <div\n                      key={symbol}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('symbol', symbol)}\n                    >\n                      {symbolFilters.includes(symbol) ? (\n                        <>\n                          <p>{symbol}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{symbol}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className=\"DropdownApply\"\n                  onClick={() => handleFilterApply('symbol')}\n                >\n                  Apply\n                </button>\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('symbol')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th>\n            <h1>TIP AMOUNT</h1>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>CHAIN</h1>\n              {chainClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('chain')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('chain')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={chainRef}\n            >\n              <h3>filter by chain</h3>\n              <div className=\"DropdownResults\">\n                {reportedChains &&\n                  reportedChains.map((chain) => (\n                    <div\n                      key={chain}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('chain', chain)}\n                    >\n                      {chainFilters.includes(chain) ? (\n                        <>\n                          <p>{chain}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{chain}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className=\"DropdownApply\"\n                  onClick={() => handleFilterApply('chain')}\n                >\n                  Apply\n                </button>\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('chain')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>FREQUENCY</h1>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>REMAINING BALANCE</h1>\n            </div>\n          </th>\n          <th>\n            <h1>DATE(DD/MM/YY), TIME</h1>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableData && tableData.length > 0 ? (\n          tableData.map((event, i) => (\n            <tr\n              key={`${event.id}-${i}`}\n              className={mode.mode === 'dark' ? 'TableBody' : 'TableBodyDark'}\n              onClick={() => handleRowClick(event.txnLink)}\n            >\n              <td className=\"TB__Symbols\">\n              {event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? (\n              event.referenceAsset ? (\n              event.referenceAsset.includes('ipfs') ? (\n                  <a className=\"GreenLink\" href={event.referenceAsset} target=\"_blank\" rel=\"noopener noreferrer\">\n                       ipfs link\n                  </a>\n                ) : (\n                  event.referenceAsset\n               )\n                ) : (\n                  'N/A' // or any other fallback value you prefer (parseFloat(event.multipliedValue) / 10 ** 18).toString() + event.tippingToken\n                )\n              ) : (\n                event.decodedValue\n              )}\n              </td> \n              <td className=\"TB__Value\">{event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? event.tips :event.tip}</td>             \n              <td className=\"TB__Chain\">{event.chain}</td>\n              <td className=\"TB__Reporter\">    \n              <p>{event.interval}</p>\n</td>\n<td className=\"TB__Balance\">\n  {event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? (\n     Math.min((((parseFloat(event.collateralBalanceGross).toString()) / (10 ** 6))  * (event.settlementFee / (10 ** 18))), 10)  + ' ' + event.symbol\n  ) : event.balance}\n</td>\n<td className=\"TB__DateTime\">\n  {event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? (\n    event.expiryTime\n  ) : event.startTime}\n</td>\n            </tr>\n          ))\n        ) : (\n          <tr className=\"TableBodyNoMatches\">\n            <LinearIndeterminate />\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TipTable;","import React, { useState, createContext, useEffect } from 'react'\n//The Graph\nimport { ApolloClient, InMemoryCache, useQuery } from '@apollo/client'\n//Utils\nimport { autopayQuery, divaPayQuery, divaPayAdaptorQuery } from '../utils/queries'\nimport { decodingAutopayMiddleware, sortDataByProperty  } from '../utils/helpers'\n//Sort\n\nexport const GraphAutopayContext = createContext()\n\n//ApolloClients\n\nconst clientMumbai = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellorautopaymumbaihgraph',\n  cache: new InMemoryCache(),\n})\n\nconst clientMainnet = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/raynharr/tellor-autopay-ethereum-graph',\n  cache: new InMemoryCache(),\n})\n\nconst clientMatic = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellorautopaymatichgraph',\n  cache: new InMemoryCache(),\n})\n\nconst clientSepolia = new ApolloClient({\n  uri: 'https://api.studio.thegraph.com/query/33329/tellor-autopay-sepolia/v0.0.5',\n  cache: new InMemoryCache(),\n})\n\nconst clientOpmain = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellor-autopay-optimism-main',\n  cache: new InMemoryCache(),\n})\n\nconst clientDivaMumbai = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/divaprotocol/diva-protocol-v1-polygon',\n  cache: new InMemoryCache(),\n})\n\nconst clientDivaAdaptorMumbai = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/raynharr/tellor-adaptor-divamumbai',\n  cache: new InMemoryCache(),\n})\n\n\nconst GraphAutopay = ({ children }) => {\n  //Component State\n  const [autopayMaticData, setAutopayMaticData] = useState({})\n  const [autopayMainnetData, setAutopayMainnetData] = useState({})\n  const [autopayMumbaiData, setAutopayMumbaiData] = useState({})\n  const [autopaySepoliaData, setAutopaySepoliaData] = useState({})\n  const [autopayOpmainData, setAutopayOpmainData] = useState({})\n  const [autopayDivaMumbaiData, setAutopayDivaMumbaiData] = useState({})\n  const [autopayDivaAdaptorMumbaiData, setAutopayDivaAdaptorMumbaiData] = useState({})\n  const [decodedData, setDecodedData] = useState([])\n  const [allGraphData, setAllGraphData] = useState(null)\n  //Context State\n  //Matic\n  const matic = useQuery(autopayQuery, {\n    client: clientMatic,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Eth mainnet\n  const mainnet = useQuery(autopayQuery, {\n    client: clientMainnet,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Mumbai\n  const mumbai = useQuery(autopayQuery, {\n    client: clientMumbai,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Sepolia\n  const sepolia = useQuery(autopayQuery, {\n    client: clientSepolia,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Optimism\n  const opmain = useQuery(autopayQuery, {\n    client: clientOpmain,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Diva Polygon\n  const divaMumbai = useQuery(divaPayQuery, {\n    client: clientDivaMumbai,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //console.log(divaMumbai)\n  const divaAdaptorMumbai = useQuery(divaPayAdaptorQuery, {\n    client: clientDivaAdaptorMumbai,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  \n  //useEffects for listening to reponses\n  //from ApolloClient queries\n  //Matic\n  useEffect(() => {\n    if (!matic) return\n    setAutopayMaticData({\n      data: matic.data,\n      loading: matic.loading,\n      error: matic.error,\n    })\n    return () => {\n      //console.log(matic.data)\n\n      setAutopayMaticData({})\n    }\n  }, [matic.data, matic.loading, matic.error]) //eslint-disable-line\n  //Eth Mainnet\n  useEffect(() => {\n    if (!mainnet) return\n    setAutopayMainnetData({\n      data: mainnet.data,\n      loading: mainnet.loading,\n      error: mainnet.error,\n    })\n    return () => {\n      setAutopayMainnetData({})\n    }\n  }, [mainnet.data, mainnet.loading, mainnet.error]) //eslint-disable-line*/\n    //Sepolia\n  useEffect(() => {\n    if (!sepolia) return\n    setAutopaySepoliaData({\n      data: sepolia.data,\n      loading: sepolia.loading,\n      error: sepolia.error,\n    })\n    return () => {\n      setAutopaySepoliaData({})\n    }\n  }, [sepolia.data, sepolia.loading, sepolia.error]) //eslint-disable-line*/\n  //Mumbai\n  useEffect(() => {\n    if (!mumbai) return\n    setAutopayMumbaiData({\n      data: mumbai.data,\n      loading: mumbai.loading,\n      error: mumbai.error,\n    })\n    return () => {\n      setAutopayMumbaiData({})\n    }\n  }, [mumbai.data, mumbai.loading, mumbai.error]) //eslint-disable-line\n  //Optimism\n  useEffect(() => {\n    if (!opmain) return\n    setAutopayOpmainData({\n      data: opmain.data,\n      loading: opmain.loading,\n      error: opmain.error,\n    })\n    return () => {\n      setAutopayOpmainData({})\n    }\n  }, [opmain.data, opmain.loading, opmain.error]) //eslint-disable-line\n  //Diva Mumbai\n  useEffect(() => {\n    if (!divaMumbai) return\n    setAutopayDivaMumbaiData({\n      data: divaMumbai.data,\n      loading: divaMumbai.loading,\n      error: divaMumbai.error,\n    })\n    return () => {\n      setAutopayDivaMumbaiData({})\n    }\n  }, [divaMumbai.data, divaMumbai.loading, divaMumbai.error]) //eslint-disable-line\n  //Diva Adaptor Mumbai\n  useEffect(() => {\n    if (!divaAdaptorMumbai) return\n    setAutopayDivaAdaptorMumbaiData({\n      data: divaAdaptorMumbai.data,\n      loading: divaAdaptorMumbai.loading,\n      error: divaAdaptorMumbai.error,\n    })\n    return () => {\n      setAutopayDivaAdaptorMumbaiData({})\n    }\n  }, [divaAdaptorMumbai.data, divaAdaptorMumbai.loading, divaAdaptorMumbai.error]) //eslint-disable-line\n  //useEffects for decoding autopay events\n  useEffect(() => {\n    if (\n      !autopayMaticData.data ||\n      !autopayMainnetData.data ||\n      !autopaySepoliaData.data ||\n      !autopayMumbaiData.data ||\n      !autopayOpmainData.data ||\n      !autopayDivaMumbaiData.data ||\n      !autopayDivaAdaptorMumbaiData.data   \n    )\n      return\n\n    let eventsArray = []\n\n    autopayMaticData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Polygon Mainnet' });\n      updatedEvent.txnLink = `https://polygonscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    })\n    autopayMumbaiData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Mumbai Testnet' });\n      updatedEvent.txnLink = `https://mumbai.polygonscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayMumbaiData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Mumbai Testnet' });\n      updatedEvent.txnLink = `https://mumbai.polygonscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayMainnetData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Ethereum Mainnet' });\n      updatedEvent.txnLink = `https://etherscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayMainnetData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Ethereum Mainnet' });\n      updatedEvent.txnLink = `https://etherscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopaySepoliaData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Sepolia Testnet' });\n      updatedEvent.txnLink = `https://sepolia.etherscan.io/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopaySepoliaData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Sepolia Testnet' });\n      updatedEvent.txnLink = `https://sepolia.etherscan.io/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayOpmainData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Optimism Mainnet' });\n      updatedEvent.txnLink = `https://optimistic.etherscan.io/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    autopayOpmainData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Optimism Mainnet' });\n      updatedEvent.txnLink = `https://optimistic.etherscan.io/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n      });\n\n    autopayDivaMumbaiData.data.pools.forEach((event) => {\n      if (event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6') {\n      const updatedEvent = Object.assign({}, event, { chain: 'Diva Polygon Mainnet' });\n      updatedEvent.txnLink = `https://app.diva.finance/markets`;\n      eventsArray.push(updatedEvent);\n      }\n      });\n      \n    /*autopayDivaMumbaiData.data.feeRecipients.forEach((event) => {\n      event.chain = 'Diva Polygon Mainnet'\n      event.txnLink = `https://polygonscan.com/tx/${event.txnHash}`\n      eventsArray.push(event)\n    })\n\n    autopayDivaAdaptorMumbaiData.data.tipAddeds.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Diva Polygon Mainnet' });\n      updatedEvent.txnLink = `https://app.diva.finance/markets`;\n      });\n      */\n    \n    let sorted = sortDataByProperty('_startTime', eventsArray)\n    setAllGraphData(sorted)\n\n    return () => {\n      setAllGraphData(null)\n    }\n  }, [autopayMaticData, autopayMumbaiData, autopayMainnetData, autopaySepoliaData, autopayOpmainData, autopayDivaMumbaiData, autopayDivaAdaptorMumbaiData])\n\n\n  useEffect(() => {\n    if (!allGraphData) return\n    setDecodedData(decodingAutopayMiddleware(allGraphData))\n    return () => {\n      setDecodedData(null)\n    }\n  }, [allGraphData])\n\n\n  const GraphContextObj = {\n    decodedData: decodedData,\n  }\n\n  return (\n    <GraphAutopayContext.Provider value={GraphContextObj}>\n      {children}\n    </GraphAutopayContext.Provider>\n  )\n}\n\nexport default GraphAutopay\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can log the error to an error reporting service\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;","import React, { useContext, useEffect, useState } from 'react'\nimport '../styles/AllFeeds.css'\nimport TipTable from './TipTable'\n//Context\nimport {  GraphAutopayContext } from '../contexts/GraphAutopay'\nimport { ModeContext } from '../contexts/Mode'\nimport LinearIndeterminate from './LinearIndeterminate'\nimport ErrorBoundary from './ErrorBoundary'; // Import ErrorBoundary\n\n//Components\n\nfunction AllTips() {\n  //Context State\n  const autoPayData = useContext(GraphAutopayContext)\n  const mode = useContext(ModeContext)\n  //Component State\n  const [clippedData, setClippedData] = useState([])\n  const [loadMoreClicks, setLoadMoreClicks] = useState(1)\n  const [viewing, setViewing] = useState(null)\n  const [loadMoreButton, setLoadMoreButton] = useState(true)\n  const [filtering, setFiltering] = useState(false)\n\n  useEffect(() => {\n    if (!autoPayData.decodedData) return\n    const newData = autoPayData.decodedData.slice(0, 50);\n    setClippedData(prevData => {\n      if (JSON.stringify(newData) !== JSON.stringify(prevData)) {\n        return [...prevData, ...newData]\n      }\n      return prevData;\n    })\n  }, [autoPayData.decodedData])\n\n  useEffect(() => {\n    if (!clippedData) return\n    setViewing(clippedData.slice(0, 6))\n\n    return () => {\n      setViewing(null)\n    }\n  }, [clippedData]) //eslint-disable-line\n\n  const handleLoadMore = () => {\n    if (!loadMoreButton) return\n    setLoadMoreClicks(loadMoreClicks + 1)\n    let loads = Math.ceil((clippedData.length - 6) / 6)\n    let loadAmount = 6 + 6 * loadMoreClicks\n    if (loadMoreClicks <= loads) {\n      setViewing(clippedData.slice(0, loadAmount))\n      if (loadMoreClicks === loads) {\n        setLoadMoreButton(false)\n      }\n    }\n  }\n\n  return (\n    <>\n      {autoPayData && autoPayData.decodedData ? (\n        <div className=\"AllFeedsView\">\n                   <ErrorBoundary> {/* Wrap TipTable with ErrorBoundary */}\n\n          <TipTable\n            data={viewing}\n            allData={autoPayData}\n            setFiltering={setFiltering}\n          />\n                    </ErrorBoundary>\n\n          <button\n            className={\n              mode.mode === 'dark' ? 'AllFeeds__Button' : 'AllFeeds__ButtonDark'\n            }\n            onClick={handleLoadMore}\n            style={{\n              cursor: loadMoreButton ? 'pointer' : 'not-allowed',\n              display: filtering ? 'none' : 'flex',\n            }}\n          >\n            {loadMoreButton ? 'load more' : 'viewing last 50 reports'}\n          </button>\n        </div>\n      ) : (\n        <LinearIndeterminate />\n      )}\n    </>\n  )\n}\n\nexport default AllTips\n","import React, { useContext } from 'react'\n\nimport '../styles/Hero.css'\n//Components\nimport AllFeeds from '../components/AllFeeds.js'\nimport AllTips from './AllTips'\n//Contexts\nimport Graph from '../contexts/Graph'\nimport GraphAutopay from '../contexts/GraphAutopay'\nimport { ModeContext } from '../contexts/Mode'\n\nfunction Hero() {\n  //Component State\n  // const [active, setActive] = useState(true)\n  // const [inactive, setInactive] = useState(true) //eslint-disable-line\n  //\n  const mode = useContext(ModeContext)\n\n  //useEffect for routing\n  // useEffect(() => {\n  //   if (window.location.href.includes('/myfeeds')) {\n  //     setActive(false)\n  //     setInactive(false)\n  //   }\n  // }, [])\n\n  // const activeHelper = (tab) => {\n  //   if (tab === 'AllFeeds') {\n  //     setActive(true)\n  //     setInactive(true)\n  //   } else if (tab === 'MyFeeds') {\n  //     setActive(false)\n  //     setInactive(false)\n  //   }\n  // }\n\n  return (\n    <div className=\"HeroInnerContainer\">\n      {/*<h1 className=\"HeroHeader\">Your Oracle at Work</h1>}}*/}\n      <Graph>\n        <GraphAutopay>\n            <div\n              className={\n                mode && mode.mode === 'dark'\n                  ? 'HeroNavLinks'\n                  : 'HeroNavLinksLight'\n              }\n            >\n              {/* <Link\n                to=\"/\"\n                className={active ? 'ActiveLink' : 'InactiveLink'}\n                onClick={() => activeHelper('AllFeeds')}\n              >\n                All Feeds\n              </Link> */}\n            </div>\n            <div className=\"HeroSection\">\n              <h2 style={{marginTop: '1em'}}>Recent Reports</h2>\n              <AllFeeds />\n              <h2 style={{marginTop: '2em'}}>Tips</h2>\n              <AllTips />\n            </div>\n        </GraphAutopay>\n      </Graph>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { useContext } from 'react'\n//Components\nimport Nav from './components/frontendBoilerplate/Nav'\nimport Footer from './components/frontendBoilerplate/Footer'\nimport Hero from './components/Hero'\n//Styles\nimport './App.css'\n//Context\nimport { ModeContext } from './contexts/Mode'\n\nfunction App() {\n  const mode = useContext(ModeContext)\n\n  return (\n    <div className={mode && mode.mode === 'dark' ? 'App' : 'AppLight'}>\n      <Nav />\n      <div\n        className={\n          mode && mode.mode === 'dark' ? 'HeroContainer' : 'HeroContainerLight'\n        }\n      >\n        <Hero />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React, { useState, createContext, useEffect } from 'react';\n//Utils\nimport chains from \"../utils/chains\";\nimport { getAssetBalances } from \"../utils/helpers\";\n//Web3\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\n\nexport const UserContext = createContext();\n\n//Web3 Modal Globals\nconst providerOptions = {\n    walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n            infuraId: \"52474cef7b964b4fbf8e954a5dfa481b\", // required\n        },\n    },\n};\nconst web3Modal = new Web3Modal({\n    providerOptions, // required\n    cacheProvider: true,\n});\n\nconst User = ({ children }) => {\n    //Context State\n    const [currentUser, setCurrentUser] = useState(null);\n    const [connected, setConnected] = useState(false);\n    const [setupUserError, setSetupUserError] = useState(null);\n    const [eventsOn, setEventsOn] = useState(false);\n    \n    const setupUser = async () => {\n        try {\n            let user = { web3Modal: web3Modal };\n            user.provider = await web3Modal.connect();\n            user.web3 = new Web3(user.provider);\n            const chainId = await user.web3.eth.getChainId();\n            user.address = (await user.web3.eth.getAccounts())[0];\n            user.network = chains[chainId];\n            user.chainId = chainId;\n            user.balances = await getAssetBalances(user.web3, user.address, chainId);\n            return user;\n        } catch (err) {\n            // console.log(err);\n            setSetupUserError(err.message);\n        }\n    };\n\n    //UseEffect on \"connected = true\" flag,\n    //sets up user and network\n    useEffect(() => {\n        if (web3Modal && connected) {\n            //if check for when user stops login flow\n            if (currentUser !== undefined && currentUser !== null) return;\n            web3Modal.clearCachedProvider();\n            setupUser().then(res => {\n                setCurrentUser(res);\n            })\n            setEventsOn(true);\n        }\n    }, [connected]) //eslint-disable-line\n\n    //useEffect that checks for when user stops login flow,\n    //and resets.\n    useEffect(() => {\n        if (currentUser === undefined) {\n            setConnected(false);\n        } else if (currentUser === undefined && connected) {\n            setConnected(false);\n        } else if (currentUser !== undefined && currentUser !== null) {\n            setConnected(true);\n        }\n    }, [currentUser, connected])\n\n    //Turning on events subscription \n    //ONLY on first web3 injection \n    // (the \"connected = true\" useEffect),\n    //to prevent memory leaks and\n    //keep event listeners cleaned up.\n    if (currentUser && eventsOn) {\n        // Subscribe to chains change\n        window.ethereum.on(\"chainChanged\", () => {\n            setupUser().then(res => {\n                setCurrentUser(res);\n            })\n        });\n        // Subscribe to accounts change\n        window.ethereum.on(\"accountsChanged\", async (accounts) => {\n            if (accounts.length === 0) {\n                web3Modal.clearCachedProvider();\n            } else {\n                setupUser().then(res => {\n                    setCurrentUser(res);\n                });\n            }\n        });\n        setEventsOn(false);\n    }\n    \n    const UserContextObject = {\n        currentUser: currentUser,\n        connected: connected,\n        setupUserError: setupUserError,\n        setCurrentUser: setCurrentUser,\n        setConnected: setConnected,\n        setSetupUserError: setSetupUserError,\n        setupUser: setupUser,\n    }\n\n    return (\n        <UserContext.Provider value={UserContextObject}>\n            {children}\n        </UserContext.Provider >\n    );\n};\n\nexport default User;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport User from './contexts/User'\nimport Mode from './contexts/Mode'\n\nReactDOM.render(\n  <User>\n    <Mode>\n      <App />\n    </Mode>\n  </User>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}